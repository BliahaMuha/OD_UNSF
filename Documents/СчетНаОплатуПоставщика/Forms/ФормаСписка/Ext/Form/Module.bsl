
&НаСервере
Процедура ОД_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	ТекстЗапросаН = Список.ТекстЗапроса;
	
	ПодстрокаЗаменяемая = "ДокументСчетНаОплату.НомерВходящегоДокумента КАК НомерВходящегоДокумента,";
	ПодстрокаНовая = "ДокументСчетНаОплату.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
						|ДокументСчетНаОплату.ОД_ЗаявкаНаДС КАК ЗаявкаНаДС,
						|ДокументСчетНаОплату.ОД_ДоговорСЗаказчиком КАК ДоговорСЗаказчиком, 
						|ВЫБОР КОГДА ДокументСчетНаОплату.ОД_Состояние = ЗНАЧЕНИЕ(Перечисление.ОД_СостоянияСчетовНаОплатуОтПоставщиков.Согласован) ТОГДА 2 ИНАЧЕ 1 КОНЕЦ КАК Согласован,
						|ДокументСчетНаОплату.ОД_ИзППМ КАК ИзППМ,"; 
	ТекстЗапросаН = СтрЗаменить(ТекстЗапросаН, ПодстрокаЗаменяемая, ПодстрокаНовая);
	
	//ПЗ_Н = "ДокументСчетНаОплату.НомерВходящегоДокумента КАК НомерВходящегоДокумента,";
	//ПН_Н = "ДокументСчетНаОплату.НомерВходящегоДокумента КАК НомерВходящегоДокумента, ДокументСчетНаОплату.ОД_ДоговорСЗаказчиком КАК ДоговорСЗаказчиком";
	//ТекстЗапросаН = СтрЗаменить(ТекстЗапросаН, ПЗ_Н, ПН_Н);
	
	Список.ТекстЗапроса = ТекстЗапросаН;
	
	ЭлементСостояниеОД = Элементы.Добавить("ОД_Состояние", Тип("ПолеФормы"), Элементы.Список); 
	ЭлементСостояниеОД.Вид = ВидПоляФормы.ПолеКартинки;
	ЭлементСостояниеОД.ПутьКДанным = "Список.Согласован";
	ЭлементСостояниеОД.КартинкаЗначений = БиблиотекаКартинок.СостояниеРассылкиОтчетов;
	
	ЭлементИзППМ = Элементы.Добавить("ОД_ИзППМ", Тип("ПолеФормы"), Элементы.Список);
	ЭлементИзППМ.Вид = ВидПоляФормы.ПолеФлажка;
	ЭлементИзППМ.ПутьКДанным = "Список.ИзППМ";
	ЭлементИзППМ.Заголовок = "Из ППМ";
	
	ЭлементЗаявкаНаДС = Элементы.Добавить("ОД_ЗаявкаНаДС", Тип("ПолеФормы"),Элементы.Список);
	ЭлементЗаявкаНаДС.Вид = ВидПоляФормы.ПолеФлажка;
	ЭлементЗаявкаНаДС.ПутьКДанным = "Список.ЗаявкаНаДС";
	ЭлементЗаявкаНаДС.Заголовок = "Заявка на ДС";
	//ЭлементЗаявкаНаДС.
	
	ЭлементДоговорСЗаказчиком = Элементы.Добавить("ОД_ДоговорСЗаказчиком", Тип("ПолеФормы"), Элементы.Список);
	ЭлементДоговорСЗаказчиком.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементДоговорСЗаказчиком.ПутьКДанным = "Список.ДоговорСЗаказчиком";
	
	//Если РольДоступна("ОД_СогласованиеСчетовНаОплатуПолученных") ИЛИ РольДоступна("АдминистраторСистемы") Тогда
	Если Пользователи.РолиДоступны("ОД_СогласованиеСчетовНаОплатуПолученных", ПользователиИнформационнойБазы.ТекущийПользователь()) Тогда		
		Ком_Согласовать = ЭтаФорма.Команды.Добавить("Команда_Согласовать");
		Ком_Согласовать.Заголовок = "Согласовать";
		Ком_Согласовать.Действие = "ОД_Согласовать"; 
		Кно_Согласовать = ЭтаФорма.Элементы.Добавить("ОД_КнопкаСогласовать", Тип("КнопкаФормы"), Элементы.ФормаСоздатьПоШаблону.Родитель);
		Кно_Согласовать.Заголовок = "Согласовать";
		Кно_Согласовать.ИмяКоманды = "Команда_Согласовать";
		Кно_Согласовать.Отображение = ОтображениеКнопки.Картинка;
		Кно_Согласовать.Картинка = БиблиотекаКартинок.ОформлениеКругЗеленый;
		
		Ком_Отклонить = ЭтаФорма.Команды.Добавить("Команда_Отклонить");
		Ком_Отклонить.Заголовок = "Отклонить";
		Ком_Отклонить.Действие = "ОД_Отклонить"; 
		Кно_Отклонить = ЭтаФорма.Элементы.Добавить("ОД_КнопкаОтклонить", Тип("КнопкаФормы"), Элементы.ФормаСоздатьПоШаблону.Родитель);
		Кно_Отклонить.Заголовок = "Отклонить";
		Кно_Отклонить.ИмяКоманды = "Команда_Отклонить";
		Кно_Отклонить.Отображение = ОтображениеКнопки.Картинка;
		Кно_Отклонить.Картинка = БиблиотекаКартинок.ОформлениеКругКрасный;	

	КонецЕсли; 
	
	Если Пользователи.РолиДоступны("ОД_ЗавершениеСчетовНаОплатуПолученных", ПользователиИнформационнойБазы.ТекущийПользователь()) Тогда
		Ком_Согласовать = ЭтаФорма.Команды.Добавить("Команда_Завершить");
		Ком_Согласовать.Заголовок = "Завершить";
		Ком_Согласовать.Действие = "ОД_Завершить"; 
		Кно_Согласовать = ЭтаФорма.Элементы.Добавить("ОД_КнопкаЗавершить", Тип("КнопкаФормы"), Элементы.ФормаСоздатьПоШаблону.Родитель);
		Кно_Согласовать.Заголовок = "Завершить";
		Кно_Согласовать.ИмяКоманды = "Команда_Завершить";
		//Кно_Согласовать.Отображение = ОтображениеКнопки.Картинка;
		//Кно_Согласовать.Картинка = БиблиотекаКартинок.ОформлениеКругЗеленый;	
	КонецЕсли;
	
	// Таблица значений выбранного счета
	МассивТипаВыбора = Новый Массив;
	МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
	ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ТаблицаВыводаДанных", ОписаниеТипаВыбора, "", "ТВД")); 
	
	КЧ = Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный);
	МассивКЧ = Новый Массив;
	МассивКЧ.Добавить(Тип("Число"));
	ОписаниеТиповЧисло = Новый ОписаниеТипов(МассивКЧ, , ,КЧ); 
	ОписаниеНом = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	ОписаниеЕдИ = Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения");
	ОписаниеНДС = Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС");
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номенклатура", ОписаниеНом);
	ТЗ.Колонки.Добавить("Количество", ОписаниеТиповЧисло);
	ТЗ.Колонки.Добавить("ЕдИзм", ОписаниеЕдИ);
	ТЗ.Колонки.Добавить("Цена", ОписаниеТиповЧисло);
	ТЗ.Колонки.Добавить("НДС", ОписаниеНДС);
	ТЗ.Колонки.Добавить("Сумма");
	ТЗ.Колонки.Добавить("СуммаНДС");
	ТЗ.Колонки.Добавить("Всего");
	
	Для Каждого Колонка Из ТЗ.Колонки Цикл

	    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,"ТаблицаВыводаДанных"));
	    
	КонецЦикла;
	ИзменитьРеквизиты(МассивРеквизитов);      
	ТаблицаПолейВыбора = Элементы.Добавить("ТВД", Тип("ТаблицаФормы"), );
	ТаблицаПолейВыбора.ПутьКДанным = "ТаблицаВыводаДанных";
	ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
	ТаблицаПолейВыбора.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	ТаблицаПолейВыбора.ТолькоПросмотр = Истина; 
	ТаблицаПолейВыбора.Видимость = Ложь;
	
	ЭТЗ = Элементы.Добавить("ТВД_Номенклатура", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 20;
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.Номенклатура";
	
	ЭТЗ = Элементы.Добавить("ТВД_Количество", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.Количество";
	
	ЭТЗ = Элементы.Добавить("ТВД_ЕдИзм", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 8;
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.ЕдИзм";
	ЭТЗ.Заголовок = "Ед. изм.";
	
	ЭТЗ = Элементы.Добавить("ТВД_Цена", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.Цена";
	
	ЭТЗ = Элементы.Добавить("ТВД_НДС", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.НДС"; 
	ЭТЗ.Заголовок = "% НДС";
	
	ЭТЗ = Элементы.Добавить("ТВД_Сумма", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 8;
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.Сумма";
	
	ЭТЗ = Элементы.Добавить("ТВД_СуммаНДС", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.СуммаНДС";
	ЭТЗ.Заголовок = "Сумма НДС";
	
	ЭТЗ = Элементы.Добавить("ТВД_Всего", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.Всего";
	
	ДобавляемыеРеквизиты	= Новый Массив;
	ОД_Отбор_Номенклатура = Новый РеквизитФормы("ОД_Отбор_Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"),, "");
	ДобавляемыеРеквизиты.Добавить(ОД_Отбор_Номенклатура);
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	НЭ = Элементы.Добавить("ОД_Отбор_Номенклатура", Тип("ПолеФормы"), Элементы.ГруппаОтборы);
    НЭ.ПутьКДанным = "ОД_Отбор_Номенклатура";
    НЭ.Вид = ВидПоляФормы.ПолеВвода;
    НЭ.ПодсказкаВвода = "Позиция номенклатуры";
	НЭ.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет; 
	
	МассСсылок = Новый Массив;
	
	НЭ.УстановитьДействие("ПриИзменении", "ПриИзмененииОД_Отбор_Номенклатура");
	//ВыбратьТолькоСвои();
	Если Пользователи.РолиДоступны("ОД_ВидимостьРП", ПользователиИнформационнойБазы.ТекущийПользователь())
		 И НЕ Пользователи.РолиДоступны("АдминистраторСистемы", ПользователиИнформационнойБазы.ТекущийПользователь()) Тогда
		ВыбратьТолькоСвои();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОД_Согласовать()

	МасСсылок = Новый Массив;
	
	Для Каждого Значение из Элементы.Список.ВыделенныеСтроки Цикл
		МасСсылок.Добавить(Значение);	
	КонецЦикла;                     
	
	ОД_СогласоватьНаСервере(МасСсылок);
	Элементы.Список.Обновить();	
	Сообщить("Статус ""Согласован"" установлен!"); 
	
КонецПроцедуры  
&НаСервере
Процедура ОД_СогласоватьНаСервере(МасСсылок)
	
	Для Каждого Значение из МасСсылок Цикл
		
		Попытка
			Об = Значение.ПолучитьОбъект();
			Об.ОД_Состояние = Перечисления.ОД_СостоянияСчетовНаОплатуОтПоставщиков.Согласован;
			Об.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());	
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОД_Отклонить()

	МасСсылок = Новый Массив;
	
	Для Каждого Значение из Элементы.Список.ВыделенныеСтроки Цикл
		МасСсылок.Добавить(Значение);	
	КонецЦикла;                     
	
	ОД_ОтклонитьНаСервере(МасСсылок);
	Элементы.Список.Обновить();
	Сообщить("Статус ""Отклонен"" установлен!");
	
КонецПроцедуры  
&НаСервере
Процедура ОД_ОтклонитьНаСервере(МасСсылок)
	
	Для Каждого Значение из МасСсылок Цикл
		
		Попытка
			Об = Значение.ПолучитьОбъект();
			Об.ОД_Состояние = Перечисления.ОД_СостоянияСчетовНаОплатуОтПоставщиков.Отклонен;
			Об.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());	
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОД_Завершить()
	МасСсылок = Новый Массив;
	
	Для Каждого Значение из Элементы.Список.ВыделенныеСтроки Цикл
		МасСсылок.Добавить(Значение);	
	КонецЦикла;                     
	
	ОД_ЗавершитьНаСервере(МасСсылок);
	Элементы.Список.Обновить();
	Сообщить("Статус ""Завершен"" установлен!");	
КонецПроцедуры
&НаСервере
Процедура ОД_ЗавершитьНаСервере(МасСсылок)
	Для Каждого Значение из МасСсылок Цикл
		
		Попытка
			Об = Значение.ПолучитьОбъект();
			Об.ОД_Состояние = Перечисления.ОД_СостоянияСчетовНаОплатуОтПоставщиков.Завершен;
			Об.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());	
		КонецПопытки;
		
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДопТаблицу(МасСтрук)

	Элементы.Найти("ТВД").Видимость = Истина;
	ЭтаФорма.ТаблицаВыводаДанных.Очистить();
		
	Для Каждого Значение из МасСтрук Цикл
		
		НС = ЭтаФорма.ТаблицаВыводаДанных.Добавить();
		
		НС.Количество = Значение.Количество;
		НС.Цена = Значение.Цена;
		НС.Сумма = Значение.Сумма;
		НС.СуммаНДС = Значение.СуммаНДС;
		НС.Всего = Значение.Всего;
		НС.Номенклатура = Значение.Номенклатура;
		НС.ЕдИзм = Значение.ЕдИзм;
		НС.НДС = Значение.НДС;
		
	КонецЦикла;
	
	Если МасСтрук.Количество() = 0 Тогда
		Элементы.Найти("ТВД").Видимость = Ложь;		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ОД_СписокПриАктивизацииСтрокиПосле(Элемент)
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		МасСтрук = ПолучитьДанныеЗаполненияДопТаблицы(Элементы.Список.ТекущиеДанные.Ссылка);
		ЗаполнитьДопТаблицу(МасСтрук);
		Если ПроверитьЗаявкуНаРасходованиеДС(Элементы.Список.ТекущиеДанные.Ссылка) = Истина Тогда 
			Элементы.Список.ТекущиеДанные.ЗаявкаНаДС = Истина;
			ЗаписатьОб(Элементы.Список.ТекущиеДанные.Ссылка)
			//ЭлСсыль = Элементы.Список.ТекущиеДанные.Ссылка;
			//ЭлОб =	ЭлСсыль.ПолучитьОбъект(); 
			//ЭлОб.Записать();
		Иначе 
			Элементы.Список.ТекущиеДанные.ЗаявкаНаДС = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьОб(ДокСсылка) 
	ДокОб = ДокСсылка.ПолучитьОбъект();
	ДокОб.ОД_ЗаявкаНаДС = Истина;
	ДокОб.Записать();
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеЗаполненияДопТаблицы(СсылкаНаДок)
	
	МасВозв = Новый Массив;
	
	Для Каждого Значение из СсылкаНаДок.Запасы Цикл
		
		СтрукВозв = Новый Структура;
		
		
		СтрукВозв.Вставить("Номенклатура", Значение.Номенклатура);
		СтрукВозв.Вставить("ЕдИзм", Значение.ЕдиницаИзмерения);
		СтрукВозв.Вставить("НДС", Значение.СтавкаНДС);
		СтрукВозв.Вставить("Количество", Значение.Количество);
		СтрукВозв.Вставить("Цена", Значение.Цена);
		СтрукВозв.Вставить("Сумма", Значение.Сумма);
		СтрукВозв.Вставить("СуммаНДС", Значение.СуммаНДС);
		СтрукВозв.Вставить("Всего", Значение.Всего);

        МасВозв.Добавить(СтрукВозв);
		
	КонецЦикла;
	
	Возврат МасВозв;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииОД_Отбор_Номенклатура()
	Если ЭтаФорма.ОД_Отбор_Номенклатура <> ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка") Тогда
        ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ПолучитьМасСсылок();
		Элементы.Список.Обновить();
	Иначе
		Список.Отбор.Элементы.Очистить();
		Если НЕ ПроверитьрольНаВидимость() Тогда
			ВыбратьТолькоСвои();	
		КонецЕсли;
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры 
&НаСервере
Процедура ПриИзмененииОД_Отбор_НоменклатураНаСервере()
		
КонецПроцедуры
&НаСервере
Функция ПолучитьМасСсылок()

	МасСписка = Новый Массив;
	Спис = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СчетНаОплатуПоставщикаЗапасы.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетНаОплатуПоставщика.Запасы КАК СчетНаОплатуПоставщикаЗапасы
		|ГДЕ
		|	СчетНаОплатуПоставщикаЗапасы.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", ЭтаФорма.ОД_Отбор_Номенклатура);	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МасСписка.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		Спис.Добавить(ВыборкаДетальныеЗаписи.Ссылка, "ВыборкаДетальныеЗаписи.Ссылка");
	КонецЦикла;
	
	Возврат Спис;
	
КонецФункции 

&НаСервере
Процедура ВыбратьТолькоСвои()

	ТекПол = ПользователиКлиентСервер.ТекущийПользователь();
	СписСсылок = ПолучитьСотрПоПольз(ТекПол);
	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = СписСсылок;
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСотрПоПольз(ТекПол)
	
	МасСотр = Новый Массив;
	Спис = Новый СписокЗначений;
	МасДок = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиПользователя.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрСведений.СотрудникиПользователя КАК СотрудникиПользователя
		|ГДЕ
		|	СотрудникиПользователя.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", ТекПол);	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МасСотр.Добавить(ВыборкаДетальныеЗаписи.Сотрудник);	
	КонецЦикла; 
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетНаОплатуПоставщика.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(СчетНаОплатуПоставщика.ДокументОснование) = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику)
		|	И НЕ СчетНаОплатуПоставщика.ДокументОснование ЕСТЬ NULL
		|	И СчетНаОплатуПоставщика.ОД_Акцептор В(&Ответственный)";
	
	Запрос.УстановитьПараметр("Ответственный", МасСотр);	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Спис.Добавить(ВыборкаДетальныеЗаписи.Ссылка, "ВыборкаДетальныеЗаписи.Ссылка");
		Если МасДок.Найти(ВыборкаДетальныеЗаписи.Ссылка) = Неопределено Тогда
			МасДок.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	СчетНаОплатуПоставщика.Ссылка КАК Ссылка
	//	|ИЗ
	//	|	Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
	//	|ГДЕ
	//	|	ТИПЗНАЧЕНИЯ(СчетНаОплатуПоставщика.ДокументОснование) = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя)
	//	|	И НЕ СчетНаОплатуПоставщика.ДокументОснование ЕСТЬ NULL
	//	|	И СчетНаОплатуПоставщика.ДокументОснование.ОД_ОтветственныйПрораб В(&Ответственный)";
	//
	//Запрос.УстановитьПараметр("Ответственный", МасСотр);	
	//РезультатЗапроса = Запрос.Выполнить();	
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	//Спис.Добавить(ВыборкаДетальныеЗаписи.Ссылка, "ВыборкаДетальныеЗаписи.Ссылка");
	//	Если МасДок.Найти(ВыборкаДетальныеЗаписи.Ссылка) = Неопределено Тогда
	//		МасДок.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	//	КонецЕсли;
	//КонецЦикла;  
	
	Для Каждого Значение из МасДок Цикл
		Спис.Добавить(Значение, "" + Значение);	
	КонецЦикла;
	
	Возврат Спис;
	
КонецФункции 



&НаСервере
Функция ПроверитьрольНаВидимость()
	Если Пользователи.РолиДоступны("ОД_Видимость_Прораб_РП", ПользователиИнформационнойБазы.ТекущийПользователь()) И 
			НЕ Пользователи.РолиДоступны("АдминистраторСистемы", ПользователиИнформационнойБазы.ТекущийПользователь()) Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПроверитьЗаявкуНаРасходованиеДС(докСсылка) 
  Запрос = Новый Запрос;
    Запрос.Текст =
        "ВЫБРАТЬ
        |	СчетНаОплатуПоставщика.Ссылка КАК Ссылка
        |ИЗ
        |	Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
        |ГДЕ
        |	СчетНаОплатуПоставщика.Ссылка = &докСсылка";
    
    Запрос.УстановитьПараметр("докСсылка", докСсылка);
	//Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	//Запрос.УстановитьПараметр("ДатаКон", ДатаКон);

    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    СписокЗаявок = Новый СписокЗначений;    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        СписокЗаявок.Добавить(ВыборкаДетальныеЗаписи.ссылка);
    КонецЦикла;
      
    Для Каждого Заявка из СписокЗаявок Цикл
        
        Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ РАЗРЕШЕННЫЕ
        |    СвязанныеДокументы.Ссылка.Ссылка
        |ИЗ
        |    КритерийОтбора.СвязанныеДокументы(&Док) КАК СвязанныеДокументы";
        
        Запрос.УстановитьПараметр("Док", Заявка.Значение);
        
        РезультатЗапроса = Запрос.Выполнить();
            ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
            Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
                //обработка полученных данных 
				Если ВыборкаДетальныеЗаписи.СсылкаСсылка.Пустая() Тогда
					Возврат Ложь
				Иначе 
					//ВыборкаДетальныеЗаписи.СсылкаСсылка;
					
					Возврат Истина
				КонецЕсли;	
            КонецЦикла;
		КонецЦикла;
		
КонецФункции




