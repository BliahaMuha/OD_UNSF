
#Область ТиповыеПроцедурыИФункции  

&НаСервере
Процедура ОД_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	//Поле Отправить на доработку
	
	
	//Если НЕ (РольДоступна("ОД_СогласованиеЗаказовПоставщикам") ИЛИ РольДоступна("АдминистраторСистемы")) Тогда
	Если НЕ Пользователи.РолиДоступны("ОД_СогласованиеЗаказовПоставщикам", ПользователиИнформационнойБазы.ТекущийПользователь()) Тогда
		Элементы.СостояниеЗаказа.ТолькоПросмотр = Истина;
		Элементы.ШапкаТабличнаяЧасть.Видимость = Ложь;
	КонецЕсли;
	
	ЭлементАкцепторОД = Элементы.Добавить("ОД_Акцептор", Тип("ПолеФормы"), Элементы.ЛеваяКолонка);
	ЭлементАкцепторОД.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементАкцепторОД.ПутьКДанным = "Объект.ОД_Акцептор";
	//Если НЕ (РольДоступна("ОД_ИзменениеАкцептораЗаказовПоставщикам") ИЛИ РольДоступна("АдминистраторСистемы")) Тогда
	Если НЕ Пользователи.РолиДоступны("ОД_ИзменениеАкцептораЗаказовПоставщикам", ПользователиИнформационнойБазы.ТекущийПользователь()) Тогда
		ЭлементАкцепторОД.ТолькоПросмотр = Истина;	
	КонецЕсли;     
	
	ЗаполнитьАкцептора(); 
	
	ЭлементСтатусДоработки = Элементы.Добавить("СтатусДоработки",Тип("ПолеФормы"),Элементы.ПраваяКолонка);
	ЭлементСтатусДоработки.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементСтатусДоработки.ПутьКДанным = "Объект.ОД_СтатусДоработки"; 
	ЭлементСтатусДоработки.УстановитьДействие("ПриИзменении","СтатусДоработкиПриИзменении");	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.СостояниеЗаказа = Справочники.СостоянияЗаказовПоставщикам.НайтиПоНаименованию("Ожидает согласования");
		Объект.ОД_СтатусДоработки = Перечисления.ОД_СтатусыОтправкиНадоработку.ВРаботу;
		//ЭтотОбъект.ОД_СтатусДоработки = Перечисления.ОД_СтатусыОтправкиНадоработку.ВРаботу;
	КонецЕсли; 
	
	Элементы.Переместить(Элементы.ГруппаНомерДатаВхДокумента, Элементы.ДополнительноПраваяКолонка);
	Элементы.ГруппаНомерДатаВхДокумента.Видимость = Ложь;
	
	// Поле "Адрес" из заказа покупателя =======================================
	//ЭлементАдресОбъектаСтроительства = Элементы.Добавить("ОД_АдресОбъектаСтроительства", Тип("ПолеФормы"), Элементы.ЛеваяКолонка);
	////ЭлементАдресОбъектаСтроительства.Вид = ВидПоляФормы.ПолеВ;
	//ЭлементАдресОбъектаСтроительства.ПутьКДанным = "Объект.ОД_АдресОбъектаСтроительства"; 
	ЗаполнитьАдресОбъектаСтроительства();
	// =========================================================================
		
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = Справочники.Сотрудники.НайтиПоНаименованию("Комаренко Инна Сергеевна", Истина);
		Объект.Контрагент = Справочники.Контрагенты.НайтиПоНаименованию("НЕ ОПРЕДЕЛЕН");
	КонецЕсли;
	
	// Журнал =====================================================================================
	СтраницаЖурнал = Элементы.Добавить("ОД_СтраницаЖурнал", Тип("ГруппаФормы"), Элементы.Страницы);
	СтраницаЖурнал.Вид = ВидГруппыФормы.Страница;
	СтраницаЖурнал.Заголовок = "Журнал (согласование)"; 
	
	МассивТипаВыбора = Новый Массив;
	МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
	ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ТаблицаЖурнала", ОписаниеТипаВыбора, "", "ТЖ")); 
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Дата");
	ТЗ.Колонки.Добавить("Статус");
	ТЗ.Колонки.Добавить("Пользователь");
	
	Для Каждого Колонка Из ТЗ.Колонки Цикл

	    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,"ТаблицаЖурнала"));
	    
	КонецЦикла;
	ИзменитьРеквизиты(МассивРеквизитов);      
	ТаблицаПолейВыбора = Элементы.Добавить("ТЖ", Тип("ТаблицаФормы"), СтраницаЖурнал);
	ТаблицаПолейВыбора.ПутьКДанным = "ТаблицаЖурнала";
	ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
	ТаблицаПолейВыбора.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	ТаблицаПолейВыбора.ТолькоПросмотр = Истина; 
	ТаблицаПолейВыбора.Видимость = Истина;
	
	ЭТЗ = Элементы.Добавить("ТЖ_Дата", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурнала.Дата";
	
	ЭТЗ = Элементы.Добавить("ТЖ_Статус", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурнала.Статус";
	
	ЭТЗ = Элементы.Добавить("ТЖ_Пользователь", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурнала.Пользователь";
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьЖурнал();	
	КонецЕсли; 
	
	ЭлСсылкаЖурнал = Элементы.Добавить("ОД_ГиперссылкаЖурнал" ,Тип("ДекорацияФормы"), Элементы.ГруппаСсылки);
 	ЭлСсылкаЖурнал.Гиперссылка = Истина;
    ЭлСсылкаЖурнал.Заголовок  =  "Журнал";  
	ЭлСсылкаЖурнал.УстановитьДействие("Нажатие", "ОткрытьФормуОтчетаЖурнала");
	// ============================================================================================
	
	// ЖурналТЧ ===================================================================================
	СтраницаЖурнал = Элементы.Добавить("ОД_СтраницаЖурналТЧ", Тип("ГруппаФормы"), Элементы.Страницы);
	СтраницаЖурнал.Вид = ВидГруппыФормы.Страница;
	СтраницаЖурнал.Заголовок = "Журнал (таблица)"; 
	
	МассивТипаВыбора = Новый Массив;
	МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
	ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ТаблицаЖурналаТЧ", ОписаниеТипаВыбора, "", "ТЖТЧ")); 
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Дата");
	ТЗ.Колонки.Добавить("Пользователь");
	ТЗ.Колонки.Добавить("Номенклатура");
	ТЗ.Колонки.Добавить("Характеристика");
	ТЗ.Колонки.Добавить("Количество");
	ТЗ.Колонки.Добавить("Цена");
	ТЗ.Колонки.Добавить("СтавкаНДС");
	ТЗ.Колонки.Добавить("Всего");
	ТЗ.Колонки.Добавить("Комментарий");
	
	Для Каждого Колонка Из ТЗ.Колонки Цикл

	    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,"ТаблицаЖурналаТЧ"));
	    
	КонецЦикла;
	ИзменитьРеквизиты(МассивРеквизитов);      
	ТаблицаПолейВыбора = Элементы.Добавить("ТЖТЧ", Тип("ТаблицаФормы"), СтраницаЖурнал);
	ТаблицаПолейВыбора.ПутьКДанным = "ТаблицаЖурналаТЧ";
	ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
	ТаблицаПолейВыбора.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	ТаблицаПолейВыбора.ТолькоПросмотр = Истина; 
	ТаблицаПолейВыбора.Видимость = Истина;
	
	ЭТЗ = Элементы.Добавить("ТЖТЧ_Дата", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурналаТЧ.Дата";
	
	ЭТЗ = Элементы.Добавить("ТЖТЧ_Пользователь", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурналаТЧ.Пользователь";
	
	ЭТЗ = Элементы.Добавить("ТЖТЧ_Номенклатура", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурналаТЧ.Номенклатура";
	
	ЭТЗ = Элементы.Добавить("ТЖТЧ_Характеристика", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурналаТЧ.Характеристика";
	
	ЭТЗ = Элементы.Добавить("ТЖТЧ_Количество", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурналаТЧ.Количество";
	
	ЭТЗ = Элементы.Добавить("ТЖТЧ_Цена", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурналаТЧ.Цена";
	
	ЭТЗ = Элементы.Добавить("ТЖТЧ_СтавкаНДС", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурналаТЧ.СтавкаНДС";
	ЭТЗ.Заголовок = "% НДС";
	
	ЭТЗ = Элементы.Добавить("ТЖТЧ_Всего", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурналаТЧ.Всего";
	
	ЭТЗ = Элементы.Добавить("ТЖТЧ_Комментарий", Тип("ПолеФормы"), ТаблицаПолейВыбора);
	ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаЖурналаТЧ.Комментарий";
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьЖурналТЧ();	
	КонецЕсли; 
	
	// ============================================================================================
	
	// Доступность ТЧ ======================================
	Если Объект.СостояниеЗаказа = Справочники.СостоянияЗаказовПоставщикам.НайтиПоНаименованию("Согласован", Истина) ИЛИ
		Объект.СостояниеЗаказа = Справочники.СостоянияЗаказовПоставщикам.НайтиПоНаименованию("Завершен", Истина) Тогда
		Если НЕ Пользователи.РолиДоступны("АдминистраторСистемы", ПользователиИнформационнойБазы.ТекущийПользователь()) И
			ПроверитьДоступностьТЧПользователю(ПользователиКлиентСервер.ТекущийПользователь(), Объект.Ответственный) = "Нет доступа" Тогда 
			//Элементы.ВидОперации.Видимость = Ложь;
			//Элементы.Договор.Видимость = Ложь;
			Элементы.Запасы.ТолькоПросмотр = Истина;
			Элементы.Добавить.Доступность = Ложь;
			Элементы.Скопировать.Доступность = Ложь;
			Элементы.Изменить.Доступность = Ложь;
			Элементы.Удалить.Доступность = Ложь;
			Элементы.ЗапасыЗапасыПодбор.Доступность = Ложь;
			Элементы.ЗапасыКопироватьСтроки.Доступность = Ложь;
			Элементы.ЗапасыВставитьСтроки.Доступность = Ложь;
			Элементы.ЗапасыИзменениеСтрокЗначение.Доступность = Ложь;
			Элементы.ЗапасыЗагрузкаДанныхИзВнешнегоИсточника.Доступность = Ложь;
			Элементы.ЗапасыИзменитьСтроки.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	// =====================================================
	
	Если Объект.СЗПР_ПланПотребностейВМатериалах <> Документы.УНСФ_ПланПотребностейВМатериалах.ПустаяСсылка() Тогда
		Объект.ОД_ИзППМ = Истина;
		Если НЕ Пользователи.РолиДоступны("ПолныеПрава",Пользователи.ТекущийПользователь()) 
			ИЛИ НЕ Пользователи.РолиДоступны("АдминистраторСистемы",Пользователи.ТекущийПользователь()) Тогда
			Элементы.Запасы.ТолькоПросмотр = Истина;
			Элементы.ГруппаЗапасыКоманднаяПанель.ТолькоПросмотр = Истина;
			Элементы.ГруппаЗапасыДобавить.ТолькоПросмотр = Истина;
			Элементы.ГруппаЗапасыКоманднаяПанель.Видимость = Ложь;
		КонецЕсли;
			
	КонецЕсли;
	НЭ = Элементы.Добавить("ОД_ИзППМ", Тип("ПолеФормы"), Элементы.ГруппаОплатаДатаПоступления);
	НЭ.Вид = ВидПоляФормы.ПолеФлажка;
	НЭ.ПутьКДанным = "Объект.ОД_ИзППМ";
	НЭ.Заголовок = "Из ППМ";
	НЭ.Доступность = Ложь;
	
	ЭлПрОД = Элементы.Добавить("ОД_ОтветственныйПрораб", Тип("ПолеФормы"), Элементы.ПраваяКолонка);
	ЭлПрОД.Вид = ВидПоляФормы.ПолеНадписи;
	ЭлПрОД.ПутьКДанным = "Объект.ОД_ОтветственныйПрораб";
	ЗаполнитьОтветственногоПрораба();
	
	// =============== Добавление реквизитов в ТЧ ==========================
	
	НовЭл = Элементы.Добавить("ОД_ВсегоВППМ", Тип("ПолеФормы"), Элементы.Запасы);
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;
	НовЭл.Доступность = Ложь;
	НовЭл.ПутьКДанным = "Объект.Запасы.ОД_ВсегоВППМ";
	
	НовЭл = Элементы.Добавить("ОД_УжеЗаказано", Тип("ПолеФормы"), Элементы.Запасы);
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;
	НовЭл.Доступность = Ложь;
	НовЭл.ПутьКДанным = "Объект.Запасы.ОД_УжеЗаказано";
	
	НовЭл = Элементы.Добавить("ОД_Остаток", Тип("ПолеФормы"), Элементы.Запасы);
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;
	НовЭл.Доступность = Ложь;
	НовЭл.ПутьКДанным = "Объект.Запасы.ОД_Остаток";
	
	Если НЕ Объект.ОД_ИзППМ Тогда
		Элементы.Найти("ОД_ВсегоВППМ").Видимость = Ложь;
		Элементы.Найти("ОД_УжеЗаказано").Видимость = Ложь;
		Элементы.Найти("ОД_Остаток").Видимость = Ложь;
	КонецЕсли;
	
	// =====================================================================
	
КонецПроцедуры

&НаКлиенте
Процедура ОД_ЗаказПокупателяПриИзмененииПосле(Элемент)
	ЗаполнитьАкцептораНаСервере();
	ЗаполнитьАдресОбъектаСтроительства();
	ЗаполнитьОтветственногоПрораба();
	ЗаполнитьЮрЛицо();
КонецПроцедуры

&НаКлиенте
Процедура ОД_ПослеЗаписиПосле(ПараметрыЗаписи)
	ЗаполнитьЖурнал();
	ЗаполнитьЖурналТЧ();
	ЗаполнитьЖурналДоработок();
КонецПроцедуры

&НаКлиенте
Процедура ОД_ДатаПоступленияПриИзмененииПосле(Элемент)
	Если ЗначениеЗаполнено(Объект.ДатаПоступления) И НачалоДня(Объект.ДатаПоступления) <= НачалоДня(ТекущаяДата()) Тогда
		Сообщить("Дата отгрузки не может быть сегодняшним днем!");
		Объект.ДатаПоступления = Дата('00010101');	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтатусДоработкиПриИзменении()
    Перем ВыбЗнач;

	Если Объект.ОД_СтатусДоработки = ПредопределенноеЗначение("Перечисление.ОД_СтатусыОтправкиНадоработку.НаДоработку") Тогда
		Массив = Новый Массив;
		//Массив.Добавить(Тип("Число"));
		ДопПараметры = Объект.Ссылка;	
		Массив.Добавить(Тип("Строка"));
		//Массив.Добавить(Тип("Дата"));
		//КЧ = Новый КвалификаторыЧисла(12,2);
		КС = Новый КвалификаторыСтроки(200);
		//КД = Новый КвалификаторыДаты(ЧастиДаты.Дата);
		ОписаниеТипов = Новый ОписаниеТипов(Массив, КС);
			
		Оповещение = Новый ОписаниеОповещения("ОтправитьСообщениеTG", ЭтотОбъект, ДопПараметры);
		ПоказатьВводЗначения(Оповещение,ВыбЗнач, "Укажите причину доработки", ОписаниеТипов);
		
	КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции 

&НаКлиенте
Процедура ОтправитьСообщениеTG(ВыбЗнач, ДопПараметры) Экспорт 
	
	ПолучательID = ПолучитьПолучательID(Объект.Автор);
	Токен = ПолучитьТокен(); 
	Заказ = Объект.Номер;
	ОД_МодульВзаимодействиеTG.ОтправитьСообщениеТелеграмм(ВыбЗнач,ПолучательID,Токен, Заказ);

КонецПроцедуры

&НаСервере
Функция ПолучитьТокен()
	Возврат Константы.ОД_ТокенTG.Получить();
КонецФункции

&НаСервере
Функция ПолучитьПолучательID(Получатель) 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.TG_ID КАК TG_ID
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Ссылка = &Получатель";
	
	Запрос.УстановитьПараметр("Получатель", Получатель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		 ПолучательID = ВыборкаДетальныеЗаписи.TG_ID;
		 Возврат ПолучательID;
	КонецЦикла;
		
		
КонецФункции

&НаСервере
Процедура ЗаполнитьАкцептора()
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ЗаказПокупателя) Тогда
		Возврат;
	КонецЕсли; 
	
	Объект.ОД_Акцептор = Объект.ЗаказПокупателя.ОД_ОтветственныйИнженерПТО;	
	
КонецПроцедуры    
&НаСервере
Процедура ЗаполнитьАкцептораНаСервере()
	Если ЗначениеЗаполнено(Объект.ЗаказПокупателя) Тогда
		Объект.ОД_Акцептор = Объект.ЗаказПокупателя.ОД_ОтветственныйИнженерПТО;
	Иначе
		Объект.ОД_Акцептор = Справочники.Сотрудники.ПустаяСсылка();	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАдресОбъектаСтроительства()

	Если ЗначениеЗаполнено(Объект.ЗаказПокупателя) Тогда
		Объект.ОД_АдресОбъектаСтроительства = Объект.ЗаказПокупателя.АдресДоставки;
		ЭтаФорма.ОД_АдресОбъекта = Объект.ЗаказПокупателя.АдресДоставки;
		Объект.ОД_ДопАдресДоставки = Объект.ЗаказПокупателя.ДополнительнаяИнформацияПоДоставке;
		ЭтаФорма.ОД_ДопАдресДоставки = Объект.ЗаказПокупателя.ДополнительнаяИнформацияПоДоставке;
	Иначе	
		Объект.ОД_АдресОбъектаСтроительства = "";
		//Д = Объект.ЗаказПокупателя.ДополнительнаяИнформацияПоДоставке;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЮрЛицо()
	Ссыль = ПолучитьДок();
	Если ЗначениеЗаполнено(Объект.Организация) Тогда 
		Если Объект.Организация <> Ссыль Тогда
			ЗаполнитьАдресОбъектаСтроительства();
		    Объект.Организация = Ссыль;
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЖурнал()
	ЭтаФорма.ТаблицаЖурнала.Очистить();
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОД_ЖурналДействийСогласовний.Дата КАК Дата,
		|	ОД_ЖурналДействийСогласовний.Пользователь КАК Пользователь,
		|	ОД_ЖурналДействийСогласовний.СтатусСогласования КАК СтатусСогласования
		|ИЗ
		|	РегистрСведений.ОД_ЖурналДействийСогласовний КАК ОД_ЖурналДействийСогласовний
		|ГДЕ
		|	ОД_ЖурналДействийСогласовний.Документ = &ЭтотДок
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос.УстановитьПараметр("ЭтотДок", Объект.Ссылка);	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НС = ЭтаФорма.ТаблицаЖурнала.Добавить();
		НС.Дата = "" + ВыборкаДетальныеЗаписи.Дата;
		НС.Статус = "" + ВыборкаДетальныеЗаписи.СтатусСогласования;
		НС.Пользователь = "" + ВыборкаДетальныеЗаписи.Пользователь;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЖурналТЧ()
	ЭтаФорма.ТаблицаЖурналаТЧ.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОД_ЖурналДействийТабличныеЧасти.Период КАК Период,
		|	ОД_ЖурналДействийТабличныеЧасти.Дата КАК Дата,
		|	ОД_ЖурналДействийТабличныеЧасти.Пользователь КАК Пользователь,
		|	ОД_ЖурналДействийТабличныеЧасти.Документ КАК Документ,
		|	ОД_ЖурналДействийТабличныеЧасти.НомерСтрокиТЧ КАК НомерСтрокиТЧ,
		|	ОД_ЖурналДействийТабличныеЧасти.Номенклатура КАК Номенклатура,
		|	ОД_ЖурналДействийТабличныеЧасти.Характеристика КАК Характеристика,
		|	ОД_ЖурналДействийТабличныеЧасти.КолВо КАК КолВо,
		|	ОД_ЖурналДействийТабличныеЧасти.Цена КАК Цена,
		|	ОД_ЖурналДействийТабличныеЧасти.СтавкаНДС КАК СтавкаНДС,
		|	ОД_ЖурналДействийТабличныеЧасти.Всего КАК Всего,
		|	ОД_ЖурналДействийТабличныеЧасти.Комментарий КАК Комментарий
		|ИЗ
		|	РегистрСведений.ОД_ЖурналДействийТабличныеЧасти КАК ОД_ЖурналДействийТабличныеЧасти
		|ГДЕ
		|	ОД_ЖурналДействийТабличныеЧасти.Документ = &ЭтотДок
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос.УстановитьПараметр("ЭтотДок", Объект.Ссылка);	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если СтрДлина(Строка(ВыборкаДетальныеЗаписи.Комментарий)) <> 0 Тогда
			НС = ЭтаФорма.ТаблицаЖурналаТЧ.Добавить();
			НС.Дата = ВыборкаДетальныеЗаписи.Дата;
			НС.Пользователь = ВыборкаДетальныеЗаписи.Пользователь;
			НС.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			НС.Характеристика = ВыборкаДетальныеЗаписи.Характеристика;
			НС.Количество = ВыборкаДетальныеЗаписи.КолВо;
			НС.Цена = ВыборкаДетальныеЗаписи.Цена;
			НС.СтавкаНДС = ВыборкаДетальныеЗаписи.СтавкаНДС;
			НС.Всего = ВыборкаДетальныеЗаписи.Всего;
			НС.Комментарий = ВыборкаДетальныеЗаписи.Комментарий;
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтчетаЖурнала()
	ОткрытьФорму("Отчет.ОД_ЖурналСогласований.Форма");	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОтветственногоПрораба()
	
	Если Объект.ЗаказПокупателя <> Документы.ЗаказПокупателя.ПустаяСсылка() Тогда   
		Объект.ОД_ОтветственныйПрораб = Объект.ЗаказПокупателя.ОД_ОтветственныйПрораб;
		
	Иначе
		Объект.ОД_ОтветственныйПрораб = Справочники.Сотрудники.ПустаяСсылка();	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьДоступностьТЧПользователю(Пол, Отв)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиПользователя.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрСведений.СотрудникиПользователя КАК СотрудникиПользователя
		|ГДЕ
		|	СотрудникиПользователя.Пользователь = &Пользователь";
	
	Запрос.УстановитьПараметр("Пользователь", Пол);	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Сотрудник = Отв Тогда
			Возврат Истина;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат "Нет доступа";
	
КонецФункции

&НаСервере
Функция ПолучитьДок()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Объект.ЗаказПокупателя);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда 
		ДокСсылка = Результат.Организация;
		ДокОбъект = ДокСсылка.ПолучитьОбъект();
	КонецЕсли;
    Возврат ДокСсылка;
	
КонецФункции


&НаКлиенте
Процедура ОД_ПередЗаписьюПосле(Отказ, ПараметрыЗаписи)
    ЗаполнитьЮрЛицо();
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		КлючеваяОперация = СтрШаблон("Проведение%1",
			РаботаСФормойДокументаКлиентСервер.ПолучитьИмяФормыСтрокой(ЭтотОбъект.ИмяФормы));
		ОценкаПроизводительностиКлиент.ЗамерВремени(КлючеваяОперация);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЖурналДоработок()
	
	Дата = ТекущаяДата();
	ЖурналДоработок = РегистрыСведений.ОД_ЖурналДоработок.СоздатьМенеджерЗаписи();
	ЖурналДоработок.Отправитель = Пользователи.ТекущийПользователь();
	ЖурналДоработок.Получатель = Объект.Автор;
	ЖурналДоработок.Документ = Объект.Ссылка;
	ЖурналДоработок.ДатаДоработки = Дата;
	ЖурналДоработок.СтатусДоработки = Объект.ОД_СтатусДоработки;
	ЖурналДоработок.Период = Дата;
	ЖурналДоработок.Записать();
		
КонецПроцедуры

#КонецОбласти





