
&НаСервере
Процедура ОД_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	//// Таблица значений выбранного счета
	//МассивТипаВыбора = Новый Массив;
	//МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
	//ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	//МассивРеквизитов = Новый Массив;
	//МассивРеквизитов.Добавить(Новый РеквизитФормы("ТаблицаВыводаДанных", ОписаниеТипаВыбора, "", "ТВД")); 
	//
	//КЧ = Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный);
	//МассивКЧ = Новый Массив;
	//МассивКЧ.Добавить(Тип("Число"));
	//ОписаниеТиповЧисло = Новый ОписаниеТипов(МассивКЧ, , ,КЧ); 
	//ОписаниеНом = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	//ОписаниеЕдИ = Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения");
	//ОписаниеНДС = Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС");
	//
	//ТЗ = Новый ТаблицаЗначений;
	//ТЗ.Колонки.Добавить("Номенклатура", ОписаниеНом);
	//ТЗ.Колонки.Добавить("Количество", ОписаниеТиповЧисло);
	//ТЗ.Колонки.Добавить("ЕдИзм", ОписаниеЕдИ);
	//ТЗ.Колонки.Добавить("Цена", ОписаниеТиповЧисло);
	//ТЗ.Колонки.Добавить("НДС", ОписаниеНДС);
	//ТЗ.Колонки.Добавить("Сумма");
	//ТЗ.Колонки.Добавить("СуммаНДС");
	//ТЗ.Колонки.Добавить("Всего");
	//
	//Для Каждого Колонка Из ТЗ.Колонки Цикл

	//    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,"ТаблицаВыводаДанных"));
	//    
	//КонецЦикла;
	//ИзменитьРеквизиты(МассивРеквизитов);      
	//ТаблицаПолейВыбора = Элементы.Добавить("ТВД", Тип("ТаблицаФормы"), );
	//ТаблицаПолейВыбора.ПутьКДанным = "ТаблицаВыводаДанных";
	//ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
	//ТаблицаПолейВыбора.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	//ТаблицаПолейВыбора.ТолькоПросмотр = Истина; 
	//ТаблицаПолейВыбора.Видимость = Ложь;
	//
	//ЭТЗ = Элементы.Добавить("ТВД_Номенклатура", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 20;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.Номенклатура";
	//
	//ЭТЗ = Элементы.Добавить("ТВД_Количество", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.Количество";
	//
	//ЭТЗ = Элементы.Добавить("ТВД_ЕдИзм", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 8;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.ЕдИзм";
	//ЭТЗ.Заголовок = "Ед. изм.";
	//
	//ЭТЗ = Элементы.Добавить("ТВД_Цена", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.Цена";
	//
	//ЭТЗ = Элементы.Добавить("ТВД_НДС", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.НДС"; 
	//ЭТЗ.Заголовок = "% НДС";
	//
	//ЭТЗ = Элементы.Добавить("ТВД_Сумма", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 8;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.Сумма";
	//
	//ЭТЗ = Элементы.Добавить("ТВД_СуммаНДС", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.СуммаНДС";
	//ЭТЗ.Заголовок = "Сумма НДС";
	//
	//ЭТЗ = Элементы.Добавить("ТВД_Всего", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанных.Всего";  
	//
	////Таблица по Счетам
	//// Таблица значений выбранного счета
	//МассивТипаВыбора = Новый Массив;
	//МассивТипаВыбора.Добавить(Тип("ТаблицаЗначений"));
	//ОписаниеТипаВыбора = Новый ОписаниеТипов(МассивТипаВыбора);
	//МассивРеквизитов = Новый Массив;
	//МассивРеквизитов.Добавить(Новый РеквизитФормы("ТаблицаВыводаДанныхСчета", ОписаниеТипаВыбора, "", "ТВДС")); 
	//
	//КЧ = Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный);
	////КС = Новый КвалификаторыСтроки(30, 30);
	//МассивКЧ = Новый Массив;
	//МассивКЧ.Добавить(Тип("Число")); 
	////МассивКС = Новый Массив;
	////МассивКС.Добавить(Тип("Строка"));
	//ОписаниеТиповЧисло = Новый ОписаниеТипов(МассивКЧ, , ,КЧ); 
	////ОписаниеТиповСтрока = Новый ОписаниеТипов(МассивКС,,,,КС);
	//ОписаниеСч = Новый ОписаниеТипов("ДокументСсылка.СчетНаОплатуПоставщика");
	//ОписаниеКо = Новый ОписаниеТипов("СправочникСсылка.Контрагенты");
	//
	//ТЗ = Новый ТаблицаЗначений;
	//ТЗ.Колонки.Добавить("Счет", ОписаниеСч);
	//ТЗ.Колонки.Добавить("Поставщик", ОписаниеКо);
	//ТЗ.Колонки.Добавить("ВхНомер", ОписаниеЕдИ);
	//ТЗ.Колонки.Добавить("Сумма");
	//ТЗ.Колонки.Добавить("Статус");
	//ТЗ.Колонки.Добавить("Оплачен");
	//
	//Для Каждого Колонка Из ТЗ.Колонки Цикл

	//    МассивРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,"ТаблицаВыводаДанныхСчета"));
	//    
	//КонецЦикла;
	//ИзменитьРеквизиты(МассивРеквизитов);      
	//ТаблицаПолейВыбора = Элементы.Добавить("ТВДС", Тип("ТаблицаФормы"), );
	//ТаблицаПолейВыбора.ПутьКДанным = "ТаблицаВыводаДанныхСчета";
	//ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
	//ТаблицаПолейВыбора.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	////ТаблицаПолейВыбора.ТолькоПросмотр = Истина; 
	//ТаблицаПолейВыбора.Видимость = Ложь;
	//
	//ЭТЗ = Элементы.Добавить("ТВДС_Счет", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 20;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанныхСчета.Счет";
	//
	//ЭТЗ = Элементы.Добавить("ТВДС_Поставщик", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанныхСчета.Поставщик";
	//
	////ЭТЗ = Элементы.Добавить("ТВДС_ВхНомер", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 8;
	////ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанныхСчета.ВхНомер";
	////ЭТЗ.Заголовок = "Вх. номер";
	//
	//ЭТЗ = Элементы.Добавить("ТВДС_Сумма", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанныхСчета.Сумма";
	//
	//ЭТЗ = Элементы.Добавить("ТВДС_Статус", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 10;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанныхСчета.Статус"; 
	//
	//ЭТЗ = Элементы.Добавить("ТВДС_Оплачен", Тип("ПолеФормы"), ТаблицаПолейВыбора); ЭТЗ.Ширина = 8;
	//ЭТЗ.Вид = ВидПоляФормы.ПолеВвода; ЭТЗ.ПутьКДанным = "ТаблицаВыводаДанныхСчета.Оплачен";

	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДопТаблицу(МасСтрук)

	//Элементы.Найти("ТВД").Видимость = Истина;
	//ЭтаФорма.ТаблицаВыводаДанных.Очистить();
	//	
	//Для Каждого Значение из МасСтрук Цикл
	//	
	//	НС = ЭтаФорма.ТаблицаВыводаДанных.Добавить();
	//	
	//	НС.Количество = Значение.Количество;
	//	НС.Цена = Значение.Цена;
	//	НС.Сумма = Значение.Сумма;
	//	НС.СуммаНДС = Значение.СуммаНДС;
	//	НС.Всего = Значение.Всего;
	//	НС.Номенклатура = Значение.Номенклатура;
	//	НС.ЕдИзм = Значение.ЕдИзм;
	//	НС.НДС = Значение.НДС;
	//	
	//КонецЦикла;
	//
	//Если МасСтрук.Количество() = 0 Тогда
	//	Элементы.Найти("ТВД").Видимость = Ложь;		
	//КонецЕсли;
	
КонецПроцедуры
&НаСервере
Функция ПолучитьДанныеЗаполненияДопТаблицы(СсылкаНаДок)
	
	//МасВозв = Новый Массив;
	//
	//Для Каждого Значение из СсылкаНаДок.Запасы Цикл
	//	
	//	СтрукВозв = Новый Структура;
	//	
	//	
	//	СтрукВозв.Вставить("Номенклатура", Значение.Номенклатура);
	//	СтрукВозв.Вставить("ЕдИзм", Значение.ЕдиницаИзмерения);
	//	СтрукВозв.Вставить("НДС", Значение.СтавкаНДС);
	//	СтрукВозв.Вставить("Количество", Значение.Количество);
	//	СтрукВозв.Вставить("Цена", Значение.Цена);
	//	СтрукВозв.Вставить("Сумма", Значение.Сумма);
	//	СтрукВозв.Вставить("СуммаНДС", Значение.СуммаНДС);
	//	СтрукВозв.Вставить("Всего", Значение.Всего);

	//    МасВозв.Добавить(СтрукВозв);
	//	
	//КонецЦикла;
	//
	//Возврат МасВозв;
	
КонецФункции
&НаКлиенте
Процедура ОД_СписокПриАктивизацииСтрокиПосле(Элемент)
	//Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
	//	МасСтрук = ПолучитьДанныеЗаполненияДопТаблицы(Элементы.Список.ТекущиеДанные.Ссылка);
	//	ЗаполнитьДопТаблицу(МасСтрук);
	//	
	//	МасСтрук = ПолучитьДанныеЗаполненияДопТаблицыСчета(Элементы.Список.ТекущиеДанные.Ссылка);
	//	ЗаполнитьДопТаблицуСчет(МасСтрук);
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеЗаполненияДопТаблицыСчета(ДокЗакПост)
	
	//ИтогМас = Новый Массив;
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	СчетНаОплатуПоставщика.Ссылка КАК Ссылка,
	//	|	СчетНаОплатуПоставщика.Контрагент КАК Контрагент,
	//	|	СчетНаОплатуПоставщика.НомерВходящегоДокумента КАК ВхНомер,
	//	|	СчетНаОплатуПоставщика.СуммаДокумента КАК СуммаДокумента,
	//	|	СчетНаОплатуПоставщика.ОД_Состояние КАК ОД_Состояние
	//	|ИЗ
	//	|	Документ.СчетНаОплатуПоставщика КАК СчетНаОплатуПоставщика
	//	|ГДЕ
	//	|	СчетНаОплатуПоставщика.ДокументОснование.ЗаказПокупателя = &ДокументОснование 
	//	|	И СчетНаОплатуПоставщика.Проведен = ИСТИНА";
	//
	//Запрос.УстановитьПараметр("ДокументОснование", ДокЗакПост);	
	//РезультатЗапроса = Запрос.Выполнить();	
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	СтрукВозв = Новый Структура;
	//	СтрукВозв.Вставить("Счет", ВыборкаДетальныеЗаписи.Ссылка);
	//	СтрукВозв.Вставить("Поставщик", ВыборкаДетальныеЗаписи.Контрагент);
	//	СтрукВозв.Вставить("ВхНомер", Строка(ВыборкаДетальныеЗаписи.ВхНомер)); 
	//	СтрукВозв.Вставить("Сумма", ВыборкаДетальныеЗаписи.СуммаДокумента);
	//	СтрукВозв.Вставить("Статус", Строка(ВыборкаДетальныеЗаписи.ОД_Состояние));
	//	СтрукВозв.Вставить("Оплачен", "");
	//	СтрукВозв.Вставить("ОсталосьОплатить", ВыборкаДетальныеЗаписи.СуммаДокумента);
	//	ИтогМас.Добавить(СтрукВозв);
	//КонецЦикла; 
	//
	//Для Каждого Значение из ИтогМас Цикл
	//		
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	РасходСоСчетаРасшифровкаПлатежа.СуммаРасчетов КАК СуммаРасчетов
	//		|ИЗ
	//		|	Документ.РасходСоСчета.РасшифровкаПлатежа КАК РасходСоСчетаРасшифровкаПлатежа
	//		|ГДЕ
	//		|	РасходСоСчетаРасшифровкаПлатежа.СчетНаОплату = &Счет
	//		|	И РасходСоСчетаРасшифровкаПлатежа.Ссылка.Проведен = ИСТИНА";
	//	
	//	Запрос.УстановитьПараметр("Счет", Значение.Счет);		
	//	РезультатЗапроса = Запрос.Выполнить();		
	//	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
	//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//		Значение.ОсталосьОплатить = Значение.ОсталосьОплатить - ВыборкаДетальныеЗаписи.СуммаРасчетов;	
	//	КонецЦикла;
	//
	//КонецЦикла; 
	//
	//Возврат ИтогМас;
	
КонецФункции
&НаКлиенте
Процедура ЗаполнитьДопТаблицуСчет(МасСтрук)
	//Элементы.Найти("ТВДС").Видимость = Истина;
	//ЭтаФорма.ТаблицаВыводаДанныхСчета.Очистить();
	//	                            
	//Для Каждого Значение из МасСтрук Цикл
	//	
	//	НС = ЭтаФорма.ТаблицаВыводаДанныхСчета.Добавить();
	//	
	//	НС.Счет = Значение.Счет;
	//	НС.Поставщик = Значение.Поставщик;
	//	НС.ВхНомер = Значение.ВхНомер;
	//	НС.Сумма = Значение.Сумма;
	//	НС.Статус = Значение.Статус;
	//	Если Значение.ОсталосьОплатить = 0 Тогда
	//		НС.Оплачен = "Оплачен";
	//	ИначеЕсли Значение.ОсталосьОплатить < 0 Тогда
	//		НС.Оплачен = "Переплата";	
	//	ИначеЕсли Значение.ОсталосьОплатить = Значение.Сумма Тогда
	//		НС.Оплачен = "Не оплачен";
	//	Иначе
	//		НС.Оплачен = "Частично оплачен";	
	//	КонецЕсли;

	//	
	//КонецЦикла;   
	//	
	//Если МасСтрук.Количество() = 0 Тогда
	//	Элементы.Найти("ТВДС").Видимость = Ложь;		
	//КонецЕсли;	
КонецПроцедуры