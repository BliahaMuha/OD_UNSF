
&НаСервере
Процедура ОД_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)

	Ком_ОчиститьРасценку = ЭтаФорма.Команды.Добавить("КомандаУдалитьРасценки");
	Ком_ОчиститьРасценку.Заголовок = "Удалить расценки";
	Ком_ОчиститьРасценку.Действие = "УдалитьРасценки";
	Кно_ОчиститьРасценку = Элементы.Добавить("КнопкаУдалитьРасценки", Тип("КнопкаФормы"), Элементы.СписокКомандаСоздатьРасценку.Родитель);
	Кно_ОчиститьРасценку.Заголовок = "Удалить расценки";
	Кно_ОчиститьРасценку.ИмяКоманды = "КомандаУдалитьРасценки";
	
	// Копирование позиций и разделов сметы
	ГруппаКопировать = Элементы.Добавить("ГруппаДанныеСметыКопировать", Тип("ГруппаФормы"), Элементы.ГруппаСоздать.Родитель);
	ГруппаКопировать.Вид = ВидГруппыФормы.Подменю;
	ГруппаКопировать.Заголовок = "Копировать";
	
	Ком_КопироватьПозицию = ЭтаФорма.Команды.Добавить("КомандаКопироватьПозициюТекущейСметы");
	Ком_КопироватьПозицию.Заголовок = "Копировать позицию в текущую смету";
	Ком_КопироватьПозицию.Действие = "КопироватьПТС";
	Кно_КопироватьПозицию = Элементы.Добавить("КнопкаКопированияПозицииТекущейСметы", Тип("КнопкаФормы"), Элементы.Найти("ГруппаДанныеСметыКопировать"));
	Кно_КопироватьПозицию.Заголовок = "Копировать позцию в текущую смету";
	Кно_КопироватьПозицию.ИмяКоманды = "КомандаКопироватьПозициюТекущейСметы";
	
	Ком_КопироватьРаздел = ЭтаФорма.Команды.Добавить("КомандаКопироватьРазделТекущейСметы");
	Ком_КопироватьРаздел.Заголовок = "Копировать раздел в текущую смету";
	Ком_КопироватьРаздел.Действие = "КопироватьРТС";
	Кно_КопироватьРаздел = Элементы.Добавить("КнопкаКопированияРазделаТекущейСметы", Тип("КнопкаФормы"), Элементы.Найти("ГруппаДанныеСметыКопировать"));
	Кно_КопироватьРаздел.Заголовок = "Копировать раздел в текущую смету";
	Кно_КопироватьРаздел.ИмяКоманды = "КомандаКопироватьРазделТекущейСметы";
	
	Ком_КопироватьДанные = ЭтаФорма.Команды.Добавить("КомандаКопироватьПозициюРазделВСтороннююСмету");
	Ком_КопироватьДанные.Заголовок = "Копировать данные в другую смету";
	Ком_КопироватьДанные.Действие = "КопироватьДДС";
	Кно_КопироватьДанные = Элементы.Добавить("КнопкаКопированияДанныхТекущейСметы", Тип("КнопкаФормы"), Элементы.Найти("ГруппаДанныеСметыКопировать"));
	Кно_КопироватьДанные.Заголовок = "Копировать данные в другую смету";
	Кно_КопироватьДанные.ИмяКоманды = "КомандаКопироватьПозициюРазделВСтороннююСмету";	
	
	// Разделение заполнения "Заполнить по виду цен"
	ГруппаЗаполнитьПоВидуЦен = Элементы.Добавить("ГруппаЗаполнитьПоВидуЦенНовый", Тип("ГруппаФормы"), Элементы.СписокКомандаЗаполнитьПоВидуЦен.Родитель);
	ГруппаЗаполнитьПоВидуЦен.Вид = ВидГруппыФормы.Подменю;
	ГруппаЗаполнитьПоВидуЦен.Заголовок = "Заполнить по виду цен"; 

	Элементы.Переместить(Элементы.СписокКомандаЗаполнитьПоВидуЦен, Элементы.Найти("ГруппаЗаполнитьПоВидуЦенНовый")); 
	Элементы.Переместить(Элементы.СписокКомандаСоздатьРасценку, Элементы.СписокКомандаСоздатьРасценку.Родитель);
	Элементы.Переместить(Элементы.Найти("ГруппаДанныеСметыКопировать"), Элементы.Найти("ГруппаДанныеСметыКопировать").Родитель);
	Элементы.Переместить(Элементы.Найти("КнопкаУдалитьРасценки"), Элементы.Найти("КнопкаУдалитьРасценки").Родитель);
	
	Ком_ЗаполнитьМатериалыПоВидуЦен = ЭтаФорма.Команды.Добавить("КомандаЗаполнитьМатериалыПоВидуЦен");
	Ком_ЗаполнитьМатериалыПоВидуЦен.Заголовок = "Заполнить материалы";
	Ком_ЗаполнитьМатериалыПоВидуЦен.Действие = "ЗаполнитьМатериалыПоВидуЦен";
	Кно_ЗаполнитьМатериалыПоВидуЦен = Элементы.Добавить("КнопкаЗаполнитьМатериалыПоВидуЦен", Тип("КнопкаФормы"), Элементы.Найти("ГруппаЗаполнитьПоВидуЦенНовый"));
	Кно_ЗаполнитьМатериалыПоВидуЦен.Заголовок = "Заполнить материалы";
	Кно_ЗаполнитьМатериалыПоВидуЦен.ИмяКоманды = "КомандаЗаполнитьМатериалыПоВидуЦен";
	
	Ком_ЗаполнитьРесурсыПоВидуЦен = ЭтаФорма.Команды.Добавить("КомандаЗаполнитьРесурсыПоВидуЦен");
	Ком_ЗаполнитьРесурсыПоВидуЦен.Заголовок = "Заполнить ресурсы";
	Ком_ЗаполнитьРесурсыПоВидуЦен.Действие = "ЗаполнитьРесурсыПоВидуЦен";
	Ком_ЗаполнитьРесурсыПоВидуЦен = Элементы.Добавить("КнопкаЗаполнитьРесурсыПоВидуЦен", Тип("КнопкаФормы"), Элементы.Найти("ГруппаЗаполнитьПоВидуЦенНовый"));
	Ком_ЗаполнитьРесурсыПоВидуЦен.Заголовок = "Заполнить ресурсы";
	Ком_ЗаполнитьРесурсыПоВидуЦен.ИмяКоманды = "КомандаЗаполнитьРесурсыПоВидуЦен";
	
КонецПроцедуры

&НаКлиенте
Процедура ОД_КомандаПодборВместо(Команда)
	// БЫЛО
	//Если Не ПроверитьНаЗаписанностьСметы() Тогда
	//	Возврат;
	//КонецЕсли;

	//ОткрытьФорму("Справочник.УНСФ_СметныеРасценки.Форма.ПодборСметныхРасценок", , ЭтотОбъект);
	
	// СТАЛО
	Если Не ПроверитьНаЗаписанностьСметы() Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросПодбора", ЭтотОбъект);
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить("Позиция", "Позиция");
	СписокКнопок.Добавить("Раздел", "Раздел"); 
	ПоказатьВопрос(Оповещение, "Добавить позицию или раздел сметных расценок?", СписокКнопок, 0,, "Вариант подбора");
		
КонецПроцедуры 

&НаКлиенте
Процедура ПослеОтветаНаВопросПодбора(Результат, Параметры) Экспорт 

	Если Результат = "Позиция" Тогда
		ОткрытьФорму("Справочник.УНСФ_СметныеРасценки.Форма.ПодборСметныхРасценок", , ЭтотОбъект);
	ИначеЕсли Результат = "Раздел" Тогда
		СтрукПар = Новый Структура;
		СтрукПар.Вставить("ДокОсн", Объект.Ссылка);
		ОткрытьФорму("Справочник.УНСФ_СметныеРасценки.Форма.ОД_ПодборСметныхРасценокРаздел", СтрукПар , ЭтотОбъект);
		Элементы.Список.Обновить();
	КонецЕсли;

КонецПроцедуры 

#Область КопироватьДанныеСметы 

&НаКлиенте
Процедура КопироватьПТС()
	
	ТекДан = Элементы.Список.ТекущиеДанные;
	
	Если ТекДан = Неопределено Тогда
		Сообщить("Позиция не выбрана!");
		Возврат;
	КонецЕсли;
	
	Если ЭтоРазделСметыПоиск(ТекДан.Ссылка) Тогда
		Сообщить("Выбран раздел. Выберите позицию!");
		Возврат;
	КонецЕсли;
	
	Попытка
		КопироватьПозициюСметы(ТекДан);
		Элементы.Список.Обновить();
	Исключение
		Сообщить(ОписаниеОшибки());	
	КонецПопытки;	
		
КонецПроцедуры
&НаСервере
Процедура КопироватьПозициюСметы(ДанныеТекущейСтроки)
	
	ВыбраннаяПозицияСметы = ДанныеТекущейСтроки.Ссылка;
	
	НПС = Справочники.УНСФ_ПозицииСмет.СоздатьЭлемент();
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка,
		|	УНСФ_ПозицииСмет.Владелец КАК Владелец,
		|	УНСФ_ПозицииСмет.Родитель КАК Родитель,
		|	УНСФ_ПозицииСмет.Код КАК Код,
		|	УНСФ_ПозицииСмет.Наименование КАК Наименование,
		|	УНСФ_ПозицииСмет.Расценка КАК Расценка,
		|	УНСФ_ПозицииСмет.СуммаПозиции КАК СуммаПозиции,
		|	УНСФ_ПозицииСмет.Объем КАК Объем,
		|	УНСФ_ПозицииСмет.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	УНСФ_ПозицииСмет.СуммаМатериалов КАК СуммаМатериалов,
		|	УНСФ_ПозицииСмет.СуммаРесурсов КАК СуммаРесурсов,
		|	УНСФ_ПозицииСмет.СуммаЗарплаты КАК СуммаЗарплаты,
		|	УНСФ_ПозицииСмет.Комментарий КАК Комментарий,
		|	УНСФ_ПозицииСмет.НаименованиеПолное КАК НаименованиеПолное,
		|	УНСФ_ПозицииСмет.СуммаПозицииФайла КАК СуммаПозицииФайла,
		|	УНСФ_ПозицииСмет.ВидРабот КАК ВидРабот
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.РазделСметы = ЛОЖЬ
		|	И УНСФ_ПозицииСмет.ПометкаУдаления = ЛОЖЬ 
		|	И УНСФ_ПозицииСмет.Ссылка = &СсылкаНаПозициюСметы";
	
	Запрос.УстановитьПараметр("СсылкаНаПозициюСметы", ВыбраннаяПозицияСметы);	
	РезультатЗапроса = Запрос.Выполнить();	
	ВДЗ = РезультатЗапроса.Выбрать();	
	Если ВДЗ.Следующий() Тогда
		
		НПС.Владелец = ВДЗ.Владелец; НПС.Родитель = ВДЗ.Родитель;
		НПС.Наименование = ВДЗ.Наименование; НПС.Расценка = ВДЗ.Расценка;
		НПС.СуммаПозиции = ВДЗ.СуммаПозиции; НПС.Объем = ВДЗ.Объем; 
		НПС.ЕдиницаИзмерения = ВДЗ.ЕдиницаИзмерения; НПС.СуммаМатериалов = ВДЗ.СуммаМатериалов;
		НПС.СуммаРесурсов = ВДЗ.СуммаРесурсов; НПС.СуммаЗарплаты = ВДЗ.СуммаЗарплаты;
		НПС.Комментарий = "Создана копированием из " + Объект.Ссылка;
		НПС.НаименованиеПолное = ВДЗ.НаименованиеПолное;
		НПС.ВидРабот = ВДЗ.ВидРабот;
		
	КонецЕсли; 
	
	Для Каждого Значение из ВыбраннаяПозицияСметы.Ресурсы Цикл
		
		НС = НПС.Ресурсы.Добавить();
		
		НС.Ресурс = Значение.Ресурс; НС.Количество = Значение.Количество;
		НС.КоличествоВсего = Значение.КоличествоВсего; НС.Цена = Значение.Цена;
		НС.Сумма = Значение.Сумма; 
		
	КонецЦикла; 
	
	Для Каждого Значение из ВыбраннаяПозицияСметы.Материалы Цикл
		
		НС = НПС.Материалы.Добавить();
		
		НС.Номенклатура = Значение.Номенклатура; НС.Характеристика = Значение.Характеристика;
		НС.ЕдиницаИзмерения = Значение.ЕдиницаИзмерения; НС.Количество = Значение.Количество;
		НС.КоличествоВсего = Значение.КоличествоВсего; НС.Цена = Значение.Цена;
		НС.Сумма = Значение.Сумма;
		
	КонецЦикла;  
	
	Для Каждого Значение из ВыбраннаяПозицияСметы.Конструктивы Цикл
		
		НС = НПС.Конструктивы.Добавить();
		
		НС.Конструктив = Значение.Конструктив;
		
	КонецЦикла; 
	
	Попытка 
		НПС.Записать();
		Сообщить("Копирование позиции завершено");
	Исключение
		Сообщить(ОписаниеОшибки());	
	КонецПопытки;
	
	Объект.Стоимость = Справочники.УНСФ_Смета.ПолучитьСуммуСметы(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьРТС()
	
	ТекДан = Элементы.Список.ТекущиеДанные;
	
	Если ТекДан = Неопределено Тогда
		Сообщить("Раздел не выбран!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоРазделСметыПоиск(ТекДан.Ссылка) Тогда
		Сообщить("Выбрана позиция. Выберите раздел!");
		Возврат;
	КонецЕсли;
	
	Попытка
		//КопироватьРазделСметы(ТекДан);
		//КопироватьРазделСметыВариантЧерезКод(ТекДан);
		КопироватьРазделСметыВариант(ТекДан.Ссылка, ПредопределенноеЗначение("Справочник.УНСФ_ПозицииСмет.ПустаяСсылка"));
		Элементы.Список.Обновить();
	Исключение
		Сообщить(ОписаниеОшибки());	
	КонецПопытки;   

	
КонецПроцедуры
&НаСервере
Процедура КопироватьРазделСметы(ДанныеТекущейСтроки)

	МасРазделовСсылка = Новый Массив;
	МасРазделовНаименованиеРодителя = Новый Массив;
	МасРазделовНаименование = Новый Массив;
	ВыбранныйРазделСметы = ДанныеТекущейСтроки.Ссылка;
	
	МасРазделовСсылка.Добавить(ВыбранныйРазделСметы);
	МасРазделовНаименованиеРодителя.Добавить("" + ВыбранныйРазделСметы.Родитель);
	МасРазделовНаименование.Добавить("" + ВыбранныйРазделСметы.Наименование);
	
	ЗаполнитьМассивРазделовРекурс(МасРазделовСсылка, МасРазделовНаименованиеРодителя, МасРазделовНаименование);
	
	Индекс = МасРазделовСсылка.Количество() - 1;
	
	Для ш = 0 по МасРазделовСсылка.Количество() - 1 Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка,
			|	УНСФ_ПозицииСмет.Владелец КАК Владелец,
			|	УНСФ_ПозицииСмет.Родитель КАК Родитель,
			|	УНСФ_ПозицииСмет.Код КАК Код,
			|	УНСФ_ПозицииСмет.Наименование КАК Наименование,
			|	УНСФ_ПозицииСмет.Расценка КАК Расценка,
			|	УНСФ_ПозицииСмет.СуммаПозиции КАК СуммаПозиции,
			|	УНСФ_ПозицииСмет.Объем КАК Объем,
			|	УНСФ_ПозицииСмет.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	УНСФ_ПозицииСмет.СуммаМатериалов КАК СуммаМатериалов,
			|	УНСФ_ПозицииСмет.СуммаРесурсов КАК СуммаРесурсов,
			|	УНСФ_ПозицииСмет.СуммаЗарплаты КАК СуммаЗарплаты,
			|	УНСФ_ПозицииСмет.Комментарий КАК Комментарий,
			|	УНСФ_ПозицииСмет.НаименованиеПолное КАК НаименованиеПолное,
			|	УНСФ_ПозицииСмет.СуммаПозицииФайла КАК СуммаПозицииФайла,
			|	УНСФ_ПозицииСмет.ВидРабот КАК ВидРабот
			|ИЗ
			|	Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
			|ГДЕ
			|	УНСФ_ПозицииСмет.РазделСметы = ИСТИНА 
			|	И УНСФ_ПозицииСмет.ПометкаУдаления = ЛОЖЬ
			|	И УНСФ_ПозицииСмет.Ссылка = &СсылкаНаРазделСметы";
		
		Запрос.УстановитьПараметр("СсылкаНаРазделСметы", МасРазделовСсылка[ш]);
		РезультатЗапроса = Запрос.Выполнить();	
		ВДЗ = РезультатЗапроса.Выбрать();	
		Если ВДЗ.Следующий() Тогда
			
			НРС = Справочники.УНСФ_ПозицииСмет.СоздатьЭлемент();
			
			НРС.Владелец = ВДЗ.Владелец; 
			Если ш = 0 Тогда
				НРС.Родитель = ВДЗ.Родитель;	
			Иначе
				НРС.Родитель = ПолучитьНовогоРодителяРаздела(МасРазделовНаименованиеРодителя[ш], МасРазделовНаименование[ш]);	
			КонецЕсли;
			НРС.Наименование = ВДЗ.Наименование; НРС.Расценка = ВДЗ.Расценка;
			НРС.СуммаПозиции = ВДЗ.СуммаПозиции; НРС.Объем = ВДЗ.Объем; 
			НРС.ЕдиницаИзмерения = ВДЗ.ЕдиницаИзмерения; НРС.СуммаМатериалов = ВДЗ.СуммаМатериалов;
			НРС.СуммаРесурсов = ВДЗ.СуммаРесурсов; НРС.СуммаЗарплаты = ВДЗ.СуммаЗарплаты;
			НРС.Комментарий = "Создан копированием из " + Объект.Ссылка + " в " + ТекущаяДата();
			НРС.НаименованиеПолное = ВДЗ.НаименованиеПолное;
			НРС.ВидРабот = ВДЗ.ВидРабот; НРС.РазделСметы = ИСТИНА;
			
			Попытка 
				НРС.Записать();
				Сообщить("Копирование раздела завершено");
			Исключение
				Сообщить(ОписаниеОшибки());	
			КонецПопытки;
			
		КонецЕсли;	 
		
		Индекс = Индекс - 1;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка,
		|	УНСФ_ПозицииСмет.Владелец КАК Владелец,
		|	УНСФ_ПозицииСмет.Родитель КАК Родитель,
		|	УНСФ_ПозицииСмет.Код КАК Код,
		|	УНСФ_ПозицииСмет.Наименование КАК Наименование,
		|	УНСФ_ПозицииСмет.Расценка КАК Расценка,
		|	УНСФ_ПозицииСмет.СуммаПозиции КАК СуммаПозиции,
		|	УНСФ_ПозицииСмет.Объем КАК Объем,
		|	УНСФ_ПозицииСмет.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	УНСФ_ПозицииСмет.СуммаМатериалов КАК СуммаМатериалов,
		|	УНСФ_ПозицииСмет.СуммаРесурсов КАК СуммаРесурсов,
		|	УНСФ_ПозицииСмет.СуммаЗарплаты КАК СуммаЗарплаты,
		|	УНСФ_ПозицииСмет.Комментарий КАК Комментарий,
		|	УНСФ_ПозицииСмет.НаименованиеПолное КАК НаименованиеПолное,
		|	УНСФ_ПозицииСмет.СуммаПозицииФайла КАК СуммаПозицииФайла,
		|	УНСФ_ПозицииСмет.ВидРабот КАК ВидРабот
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.РазделСметы = ЛОЖЬ
		|	И УНСФ_ПозицииСмет.Родитель.Ссылка В (&СсылкаНаПозициюСметы)";
	
	Запрос.УстановитьПараметр("СсылкаНаПозициюСметы", МасРазделовСсылка);	
	РезультатЗапроса = Запрос.Выполнить();	
	ВДЗ = РезультатЗапроса.Выбрать();	
	Пока ВДЗ.Следующий() Цикл
		
		НПС = Справочники.УНСФ_ПозицииСмет.СоздатьЭлемент();
		
		НПС.Владелец = ВДЗ.Владелец; НПС.Родитель = ПолучитьНовогоРодителяПозиции(ВДЗ.Ссылка);
		НПС.Наименование = ВДЗ.Наименование; НПС.Расценка = ВДЗ.Расценка;
		НПС.СуммаПозиции = ВДЗ.СуммаПозиции; НПС.Объем = ВДЗ.Объем; 
		НПС.ЕдиницаИзмерения = ВДЗ.ЕдиницаИзмерения; НПС.СуммаМатериалов = ВДЗ.СуммаМатериалов;
		НПС.СуммаРесурсов = ВДЗ.СуммаРесурсов; НПС.СуммаЗарплаты = ВДЗ.СуммаЗарплаты;
		НПС.Комментарий = "Создана копированием из " + Объект.Ссылка;
		НПС.НаименованиеПолное = ВДЗ.НаименованиеПолное;
		НПС.ВидРабот = ВДЗ.ВидРабот;
		
		Для Каждого ЗначениеР из ВДЗ.Ссылка.Ресурсы Цикл
		
			НС = НПС.Ресурсы.Добавить();
			
			НС.Ресурс = ЗначениеР.Ресурс; НС.Количество = ЗначениеР.Количество;
			НС.КоличествоВсего = ЗначениеР.КоличествоВсего; НС.Цена = ЗначениеР.Цена;
			НС.Сумма = ЗначениеР.Сумма; 
			
		КонецЦикла; 
		
		Для Каждого ЗначениеМ из ВДЗ.Ссылка.Материалы Цикл
			
			НС = НПС.Материалы.Добавить();
			
			НС.Номенклатура = ЗначениеМ.Номенклатура; НС.Характеристика = ЗначениеМ.Характеристика;
			НС.ЕдиницаИзмерения = ЗначениеМ.ЕдиницаИзмерения; НС.Количество = ЗначениеМ.Количество;
			НС.КоличествоВсего = ЗначениеМ.КоличествоВсего; НС.Цена = ЗначениеМ.Цена;
			НС.Сумма = ЗначениеМ.Сумма;
			
		КонецЦикла;  
		
		Для Каждого ЗначениеК из ВДЗ.Ссылка.Конструктивы Цикл
			
			НС = НПС.Конструктивы.Добавить();
			
			НС.Конструктив = ЗначениеК.Конструктив;
			
		КонецЦикла; 
		
		Попытка 
			НПС.Записать();
			Сообщить("Копирование позиции завершено");
		Исключение
			Сообщить(ОписаниеОшибки());	
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры
&НаСервере
Процедура КопироватьРазделСметыВариантЧерезКод(ДанныеТекущейСтроки)

	МасРазделовСсылка = Новый Массив;
	МасРазделовКод = Новый Массив;
	МасРодителяРазделаКод = Новый Массив;
	ВыбранныйРазделСметы = ДанныеТекущейСтроки.Ссылка;
	
	МасРазделовСсылка.Добавить(ВыбранныйРазделСметы);
	МасРазделовКод.Добавить(ВыбранныйРазделСметы.Код);
	Если ЗначениеЗаполнено(ВыбранныйРазделСметы.Родитель) Тогда
		МасРодителяРазделаКод.Добавить(ВыбранныйРазделСметы.Родитель.Код);	
	Иначе
		МасРодителяРазделаКод.Добавить("");	
	КонецЕсли;
	
	ЗаполнитьМассивРазделовЧерезКодРекурс(МасРазделовСсылка, МасРазделовКод, МасРодителяРазделаКод);
	
	Индекс = МасРазделовСсылка.Количество() - 1;
	
	Для ш = 0 по МасРазделовСсылка.Количество() - 1 Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка,
			|	УНСФ_ПозицииСмет.Владелец КАК Владелец,
			|	УНСФ_ПозицииСмет.Родитель КАК Родитель,
			|	УНСФ_ПозицииСмет.Код КАК Код,
			|	УНСФ_ПозицииСмет.Наименование КАК Наименование,
			|	УНСФ_ПозицииСмет.Расценка КАК Расценка,
			|	УНСФ_ПозицииСмет.СуммаПозиции КАК СуммаПозиции,
			|	УНСФ_ПозицииСмет.Объем КАК Объем,
			|	УНСФ_ПозицииСмет.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	УНСФ_ПозицииСмет.СуммаМатериалов КАК СуммаМатериалов,
			|	УНСФ_ПозицииСмет.СуммаРесурсов КАК СуммаРесурсов,
			|	УНСФ_ПозицииСмет.СуммаЗарплаты КАК СуммаЗарплаты,
			|	УНСФ_ПозицииСмет.Комментарий КАК Комментарий,
			|	УНСФ_ПозицииСмет.НаименованиеПолное КАК НаименованиеПолное,
			|	УНСФ_ПозицииСмет.СуммаПозицииФайла КАК СуммаПозицииФайла,
			|	УНСФ_ПозицииСмет.ВидРабот КАК ВидРабот
			|ИЗ
			|	Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
			|ГДЕ
			|	УНСФ_ПозицииСмет.РазделСметы = ИСТИНА 
			|	И УНСФ_ПозицииСмет.Ссылка = &СсылкаНаРазделСметы";
		
		Запрос.УстановитьПараметр("СсылкаНаРазделСметы", МасРазделовСсылка[ш]);
		РезультатЗапроса = Запрос.Выполнить();	
		ВДЗ = РезультатЗапроса.Выбрать();	
		Если ВДЗ.Следующий() Тогда
			
			НРС = Справочники.УНСФ_ПозицииСмет.СоздатьЭлемент();
			
			НРС.Владелец = ВДЗ.Владелец; 
			Если ш = 0 Тогда
				НРС.Родитель = ВДЗ.Родитель;	
			Иначе
				НРС.Родитель = ПолучитьНовогоРодителяЧерезКодРаздела(МасРодителяРазделаКод[ш], МасРазделовКод[ш]);	
			КонецЕсли;            
			НРС.Наименование = ВДЗ.Наименование; НРС.Расценка = ВДЗ.Расценка;
			НРС.СуммаПозиции = ВДЗ.СуммаПозиции; НРС.Объем = ВДЗ.Объем; 
			НРС.ЕдиницаИзмерения = ВДЗ.ЕдиницаИзмерения; НРС.СуммаМатериалов = ВДЗ.СуммаМатериалов;
			НРС.СуммаРесурсов = ВДЗ.СуммаРесурсов; НРС.СуммаЗарплаты = ВДЗ.СуммаЗарплаты;
			НРС.Комментарий = "Создан копированием из " + Объект.Ссылка + " в " + ТекущаяДата();
			НРС.НаименованиеПолное = ВДЗ.НаименованиеПолное;
			НРС.ВидРабот = ВДЗ.ВидРабот; НРС.РазделСметы = ИСТИНА;
			НРС.ОД_СтарыйКод = МасРазделовКод[ш]; НРС.ОД_СтарыйКодРодителя = МасРодителяРазделаКод[ш];
			
			Попытка 
				НРС.Записать();
				Сообщить("Копирование раздела завершено");
			Исключение
				Сообщить(ОписаниеОшибки());	
			КонецПопытки;
			
		КонецЕсли;	 
		
		Индекс = Индекс - 1;
		
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка,
		|	УНСФ_ПозицииСмет.Владелец КАК Владелец,
		|	УНСФ_ПозицииСмет.Родитель КАК Родитель,
		|	УНСФ_ПозицииСмет.Код КАК Код,
		|	УНСФ_ПозицииСмет.Наименование КАК Наименование,
		|	УНСФ_ПозицииСмет.Расценка КАК Расценка,
		|	УНСФ_ПозицииСмет.СуммаПозиции КАК СуммаПозиции,
		|	УНСФ_ПозицииСмет.Объем КАК Объем,
		|	УНСФ_ПозицииСмет.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	УНСФ_ПозицииСмет.СуммаМатериалов КАК СуммаМатериалов,
		|	УНСФ_ПозицииСмет.СуммаРесурсов КАК СуммаРесурсов,
		|	УНСФ_ПозицииСмет.СуммаЗарплаты КАК СуммаЗарплаты,
		|	УНСФ_ПозицииСмет.Комментарий КАК Комментарий,
		|	УНСФ_ПозицииСмет.НаименованиеПолное КАК НаименованиеПолное,
		|	УНСФ_ПозицииСмет.СуммаПозицииФайла КАК СуммаПозицииФайла,
		|	УНСФ_ПозицииСмет.ВидРабот КАК ВидРабот
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.РазделСметы = ЛОЖЬ
		|	И УНСФ_ПозицииСмет.ПометкаУдаления = ЛОЖЬ
		|	И УНСФ_ПозицииСмет.Родитель.Ссылка В (&СсылкаНаПозициюСметы)";
	
	Запрос.УстановитьПараметр("СсылкаНаПозициюСметы", МасРазделовСсылка);	
	РезультатЗапроса = Запрос.Выполнить();	
	ВДЗ = РезультатЗапроса.Выбрать();	
	Пока ВДЗ.Следующий() Цикл
		
		НПС = Справочники.УНСФ_ПозицииСмет.СоздатьЭлемент();
		
		НПС.Владелец = ВДЗ.Владелец; НПС.Родитель = ПолучитьНовогоРодителяЧерезКодПозиции(ВДЗ.Ссылка);
		НПС.Наименование = ВДЗ.Наименование; НПС.Расценка = ВДЗ.Расценка;
		НПС.СуммаПозиции = ВДЗ.СуммаПозиции; НПС.Объем = ВДЗ.Объем; 
		НПС.ЕдиницаИзмерения = ВДЗ.ЕдиницаИзмерения; НПС.СуммаМатериалов = ВДЗ.СуммаМатериалов;
		НПС.СуммаРесурсов = ВДЗ.СуммаРесурсов; НПС.СуммаЗарплаты = ВДЗ.СуммаЗарплаты;
		НПС.Комментарий = "Создана копированием из " + Объект.Ссылка;
		НПС.НаименованиеПолное = ВДЗ.НаименованиеПолное;
		НПС.ВидРабот = ВДЗ.ВидРабот;
		
		Для Каждого ЗначениеР из ВДЗ.Ссылка.Ресурсы Цикл
		
			НС = НПС.Ресурсы.Добавить();
			
			НС.Ресурс = ЗначениеР.Ресурс; НС.Количество = ЗначениеР.Количество;
			НС.КоличествоВсего = ЗначениеР.КоличествоВсего; НС.Цена = ЗначениеР.Цена;
			НС.Сумма = ЗначениеР.Сумма; 
			
		КонецЦикла; 
		
		Для Каждого ЗначениеМ из ВДЗ.Ссылка.Материалы Цикл
			
			НС = НПС.Материалы.Добавить();
			
			НС.Номенклатура = ЗначениеМ.Номенклатура; НС.Характеристика = ЗначениеМ.Характеристика;
			НС.ЕдиницаИзмерения = ЗначениеМ.ЕдиницаИзмерения; НС.Количество = ЗначениеМ.Количество;
			НС.КоличествоВсего = ЗначениеМ.КоличествоВсего; НС.Цена = ЗначениеМ.Цена;
			НС.Сумма = ЗначениеМ.Сумма;
			
		КонецЦикла;  
		
		Для Каждого ЗначениеК из ВДЗ.Ссылка.Конструктивы Цикл
			
			НС = НПС.Конструктивы.Добавить();
			
			НС.Конструктив = ЗначениеК.Конструктив;
			
		КонецЦикла; 
		
		Попытка 
			НПС.Записать();
			Сообщить("Копирование позиции завершено");
		Исключение
			Сообщить(ОписаниеОшибки());	
		КонецПопытки;
		
	КонецЦикла;
	
	Сообщить("Тест");
	
КонецПроцедуры
&НаСервере
Процедура КопироватьРазделСметыВариант(СсылкаНаРаздел, СсылкаНаРодителяРаздел)
	
	НРС = Справочники.УНСФ_ПозицииСмет.СоздатьЭлемент();
	НРС.Наименование = СсылкаНаРаздел.Наименование; 
	НРС.РазделСметы = Истина; НРС.Родитель = СсылкаНаРодителяРаздел;
	НРС.Владелец = Объект.Ссылка; НРС.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка,
		|	УНСФ_ПозицииСмет.ВерсияДанных КАК ВерсияДанных,
		|	УНСФ_ПозицииСмет.ПометкаУдаления КАК ПометкаУдаления,
		|	УНСФ_ПозицииСмет.Владелец КАК Владелец,
		|	УНСФ_ПозицииСмет.Родитель КАК Родитель,
		|	УНСФ_ПозицииСмет.Код КАК Код,
		|	УНСФ_ПозицииСмет.Наименование КАК Наименование,
		|	УНСФ_ПозицииСмет.РазделСметы КАК РазделСметы,
		|	УНСФ_ПозицииСмет.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
		|	УНСФ_ПозицииСмет.Расценка КАК Расценка,
		|	УНСФ_ПозицииСмет.СуммаПозиции КАК СуммаПозиции,
		|	УНСФ_ПозицииСмет.Объем КАК Объем,
		|	УНСФ_ПозицииСмет.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	УНСФ_ПозицииСмет.СуммаМатериалов КАК СуммаМатериалов,
		|	УНСФ_ПозицииСмет.СуммаРесурсов КАК СуммаРесурсов,
		|	УНСФ_ПозицииСмет.СуммаЗарплаты КАК СуммаЗарплаты,
		|	УНСФ_ПозицииСмет.Комментарий КАК Комментарий,
		|	УНСФ_ПозицииСмет.НаименованиеПолное КАК НаименованиеПолное,
		|	УНСФ_ПозицииСмет.СуммаПозицииФайла КАК СуммаПозицииФайла,
		|	УНСФ_ПозицииСмет.ВидРабот КАК ВидРабот
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.Владелец = &ЭтаСмета
		|	И УНСФ_ПозицииСмет.Родитель = &СсылкаНаРод
		|	И УНСФ_ПозицииСмет.ПометкаУдаления = &Ложь
		|	И УНСФ_ПозицииСмет.РазделСметы = &Ложь";
	
	Запрос.УстановитьПараметр("ЭтаСмета", Объект.Ссылка);
	Запрос.УстановитьПараметр("СсылкаНаРод", СсылкаНаРаздел);
	Запрос.УстановитьПараметр("Ложь", Ложь);
	РезультатЗапроса = Запрос.Выполнить();	
	ВДЗ = РезультатЗапроса.Выбрать();	
	Пока ВДЗ.Следующий() Цикл
		
		НПС = Справочники.УНСФ_ПозицииСмет.СоздатьЭлемент();
		НПС.Владелец = Объект.Ссылка; НПС.Родитель = НРС.Ссылка;
		НПС.Наименование = ВДЗ.Наименование; НПС.Расценка = ВДЗ.Расценка;
		НПС.СуммаПозиции = ВДЗ.СуммаПозиции; НПС.Объем = ВДЗ.Объем; 
		НПС.ЕдиницаИзмерения = ВДЗ.ЕдиницаИзмерения; НПС.СуммаМатериалов = ВДЗ.СуммаМатериалов;
		НПС.СуммаРесурсов = ВДЗ.СуммаРесурсов; НПС.СуммаЗарплаты = ВДЗ.СуммаЗарплаты;
		НПС.Комментарий = "Создана копированием из " + Объект.Ссылка;
		НПС.НаименованиеПолное = ВДЗ.НаименованиеПолное;
		НПС.ВидРабот = ВДЗ.ВидРабот;
		
		Для Каждого Значение из ВДЗ.Ссылка.Ресурсы Цикл
			НР = НПС.Ресурсы.Добавить();
			НР.Ресурс = Значение.Ресурс; НР.Количество = Значение.Количество;
			НР.КоличествоВсего = Значение.КоличествоВсего;
			НР.Цена = Значение.Цена; НР.Сумма = Значение.Сумма;
		КонецЦикла;
		
		Для Каждого Значение из ВДЗ.Ссылка.Материалы Цикл
			НМ = НПС.Материалы.Добавить();
			НМ.Номенклатура = Значение.Номенклатура; НМ.Характеристика = Значение.Характеристика;
			НМ.ЕдиницаИзмерения = Значение.ЕдиницаИзмерения; НМ.Цена = Значение.Цена;
			НМ.Количество = Значение.Количество; НМ.Сумма = Значение.Сумма;
			НМ.КоличествоВсего = Значение.КоличествоВсего;
		КонецЦикла;
		
		Для Каждого Значение из ВДЗ.Ссылка.Конструктивы Цикл
			НК = НПС.Конструктивы.Добавить();
			НК.Конструктив = Значение.Конструктив;
		КонецЦикла; 
		
		НПС.Записать();	
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка,
		|	УНСФ_ПозицииСмет.ВерсияДанных КАК ВерсияДанных,
		|	УНСФ_ПозицииСмет.ПометкаУдаления КАК ПометкаУдаления,
		|	УНСФ_ПозицииСмет.Владелец КАК Владелец,
		|	УНСФ_ПозицииСмет.Родитель КАК Родитель,
		|	УНСФ_ПозицииСмет.Код КАК Код,
		|	УНСФ_ПозицииСмет.Наименование КАК Наименование,
		|	УНСФ_ПозицииСмет.РазделСметы КАК РазделСметы,
		|	УНСФ_ПозицииСмет.РеквизитДопУпорядочивания КАК РеквизитДопУпорядочивания,
		|	УНСФ_ПозицииСмет.Расценка КАК Расценка,
		|	УНСФ_ПозицииСмет.СуммаПозиции КАК СуммаПозиции,
		|	УНСФ_ПозицииСмет.Объем КАК Объем,
		|	УНСФ_ПозицииСмет.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	УНСФ_ПозицииСмет.СуммаМатериалов КАК СуммаМатериалов,
		|	УНСФ_ПозицииСмет.СуммаРесурсов КАК СуммаРесурсов,
		|	УНСФ_ПозицииСмет.СуммаЗарплаты КАК СуммаЗарплаты,
		|	УНСФ_ПозицииСмет.Комментарий КАК Комментарий,
		|	УНСФ_ПозицииСмет.НаименованиеПолное КАК НаименованиеПолное,
		|	УНСФ_ПозицииСмет.СуммаПозицииФайла КАК СуммаПозицииФайла,
		|	УНСФ_ПозицииСмет.ВидРабот КАК ВидРабот
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.Владелец = &ЭтаСмета
		|	И УНСФ_ПозицииСмет.Родитель = &СсылкаНаРод
		|	И УНСФ_ПозицииСмет.ПометкаУдаления = &Ложь
		|	И УНСФ_ПозицииСмет.РазделСметы = &Истина";
	
	Запрос.УстановитьПараметр("ЭтаСмета", Объект.Ссылка);
	Запрос.УстановитьПараметр("СсылкаНаРод", СсылкаНаРаздел);
	Запрос.УстановитьПараметр("Ложь", Ложь);
	Запрос.УстановитьПараметр("Истина", Истина);
	РезультатЗапроса = Запрос.Выполнить();	
	ВДЗ = РезультатЗапроса.Выбрать();	
	Пока ВДЗ.Следующий() Цикл
		КопироватьРазделСметыВариант(ВДЗ.Ссылка, НРС.Ссылка);		
	КонецЦикла;

	Объект.Стоимость = Справочники.УНСФ_Смета.ПолучитьСуммуСметы(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьДДС()
	
	ТекДан = Элементы.Список.ТекущиеДанные;
	
	Если ТекДан = Неопределено Тогда
		Сообщить("Данные не выбраны!");
		Возврат;
	КонецЕсли;
	
	Попытка
		
		ПередПараметры = Новый Структура;
		ПередПараметры.Вставить("ИсходнаяСмета", Объект.Ссылка);
		ПередПараметры.Вставить("ПозицияРаздел", ТекДан.Ссылка);
		
		ОткрытьФорму("ОбщаяФорма.ОД_КопированиеПозицийРазделовСметы", ПередПараметры);
		
	Исключение
		Сообщить(ОписаниеОшибки());	
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ЭтоРазделСметыПоиск(СсылкаНаПозицию)
	Если СсылкаНаПозицию.РазделСметы Тогда
		Возврат Истина;	
	Иначе
		Возврат Ложь;	
	КонецЕсли;
КонецФункции
&НаСервере
Процедура ЗаполнитьМассивРазделовРекурс(МассивЗаполнения, МассивНаименованийРодителей, МассивНаименований)
	
	ДлинаМассиваДоПоиска = МассивЗаполнения.Количество();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка,
		|	УНСФ_ПозицииСмет.Родитель КАК Родитель,
		|	УНСФ_ПозицииСмет.Наименование КАК Наименование
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.РазделСметы = ИСТИНА
		|	И УНСФ_ПозицииСмет.ПометкаУдаления = Ложь
		|	И УНСФ_ПозицииСмет.Владелец = &Владелец
		|	И УНСФ_ПозицииСмет.Родитель В (&МассивРодителей)";
	
	Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
	Запрос.УстановитьПараметр("МассивРодителей", МассивЗаполнения);
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДелатльныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДелатльныеЗаписи.Следующий() Цикл
		
		Если МассивЗаполнения.Найти(ВыборкаДелатльныеЗаписи.Ссылка) = Неопределено Тогда
			МассивЗаполнения.Добавить(ВыборкаДелатльныеЗаписи.Ссылка);
			МассивНаименованийРодителей.Добавить("" + ВыборкаДелатльныеЗаписи.Родитель);
			МассивНаименований.Добавить("" + ВыборкаДелатльныеЗаписи.Наименование);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДлинаМассиваДоПоиска <> МассивЗаполнения.Количество() Тогда
		ЗаполнитьМассивРазделовРекурс(МассивЗаполнения, МассивНаименованийРодителей, МассивНаименований);		
	КонецЕсли;
		
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьМассивРазделовЧерезКодРекурс(МассивЗаполнения, МассивЗаполненияКод, МассивЗаполненияКодРодителя)

	ДлинаМассиваДоПоиска = МассивЗаполнения.Количество();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка,
		|	УНСФ_ПозицииСмет.Родитель.Код КАК РодительКод,
		|	УНСФ_ПозицииСмет.Ссылка.Код КАК Код
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.РазделСметы = ИСТИНА
		|	И УНСФ_ПозицииСмет.ПометкаУдаления = Ложь
		|	И УНСФ_ПозицииСмет.Владелец = &Владелец
		|	И УНСФ_ПозицииСмет.Родитель.Код В (&МассивРодителей)";
	
	Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
	Запрос.УстановитьПараметр("МассивРодителей", МассивЗаполненияКод);
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДелатльныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДелатльныеЗаписи.Следующий() Цикл
		
		Если МассивЗаполнения.Найти(ВыборкаДелатльныеЗаписи.Ссылка) = Неопределено Тогда
			МассивЗаполнения.Добавить(ВыборкаДелатльныеЗаписи.Ссылка);
			МассивЗаполненияКод.Добавить("" + ВыборкаДелатльныеЗаписи.Код);
			МассивЗаполненияКодРодителя.Добавить("" + ВыборкаДелатльныеЗаписи.РодительКод);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ДлинаМассиваДоПоиска <> МассивЗаполнения.Количество() Тогда
		ЗаполнитьМассивРазделовЧерезКодРекурс(МассивЗаполнения, МассивЗаполненияКод, МассивЗаполненияКодРодителя);		
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Функция ПолучитьНовогоРодителяРаздела(НаименованиеРодителя, Наименование)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка
		|ИЗ
		|Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.РазделСметы = ИСТИНА
		|	И УНСФ_ПозицииСмет.Владелец = &ТекСмета
		|	И ВЫРАЗИТЬ(УНСФ_ПозицииСмет.Ссылка.Комментарий КАК СТРОКА(150)) = &Комментарий
		|	И УНСФ_ПозицииСмет.Ссылка.Наименование = &НаименованиеРодителя";
	
	Запрос.УстановитьПараметр("НаименованиеРодителя", НаименованиеРодителя);
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("ТекСмета", Объект.Ссылка);
	Запрос.УстановитьПараметр("Комментарий", "Создан копированием из " + Объект.Ссылка + " в " + ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДелатльныеЗаписи = РезультатЗапроса.Выбрать();	
	
	Если ВыборкаДелатльныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДелатльныеЗаписи.Ссылка;	
	Иначе
		Возврат Справочники.УНСФ_ПозицииСмет.ПустаяСсылка();	
	КонецЕсли;
	
КонецФункции
&НаСервере
Функция ПолучитьНовогоРодителяЧерезКодРаздела(НаименованиеКодаРодителя, ТекущийКод)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка
		|ИЗ
		|Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.РазделСметы = ИСТИНА
		|	И УНСФ_ПозицииСмет.Владелец = &ТекСмета
		|	И УНСФ_ПозицииСмет.ПометкаУдаления = ЛОЖЬ
		|	И ВЫРАЗИТЬ(УНСФ_ПозицииСмет.Ссылка.Комментарий КАК СТРОКА(150)) = &Комментарий
		|	И УНСФ_ПозицииСмет.ОД_СтарыйКод = &СтарыйКодОД";
	
	Запрос.УстановитьПараметр("СтарыйКодОД", НаименованиеКодаРодителя);
	Запрос.УстановитьПараметр("ТекСмета", Объект.Ссылка);
	Запрос.УстановитьПараметр("Комментарий", "Создан копированием из " + Объект.Ссылка + " в " + ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДелатльныеЗаписи = РезультатЗапроса.Выбрать();	
	
	Если ВыборкаДелатльныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДелатльныеЗаписи.Ссылка;	
	Иначе
		Возврат Справочники.УНСФ_ПозицииСмет.ПустаяСсылка();	
	КонецЕсли;
	
КонецФункции
&НаСервере
Функция РодительПозицииВМассиве(Позиция, МассивРазделов)

	Для Каждого Значение из МассивРазделов Цикл
		Если Позиция.Родитель = Значение Тогда
			Возврат Истина;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции
&НаСервере
Функция ПолучитьНовогоРодителяПозиции(Позиция)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка
		|ИЗ
		|Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.РазделСметы = ИСТИНА
		|	И УНСФ_ПозицииСмет.Владелец = &ТекСмета
		|	И ВЫРАЗИТЬ(УНСФ_ПозицииСмет.Ссылка.Комментарий КАК СТРОКА(150)) = &Комментарий
		|	И УНСФ_ПозицииСмет.Ссылка.Наименование = &НаименованиеРодителя";
	
	Запрос.УстановитьПараметр("НаименованиеРодителя", Позиция.Родитель.Наименование);
	Запрос.УстановитьПараметр("ТекСмета", Объект.Ссылка);
	Запрос.УстановитьПараметр("Комментарий", "Создан копированием из " + Объект.Ссылка + " в " + ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДелатльныеЗаписи = РезультатЗапроса.Выбрать();	
	
	Если ВыборкаДелатльныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДелатльныеЗаписи.Ссылка;	
	Иначе
		Возврат Справочники.УНСФ_ПозицииСмет.ПустаяСсылка();	
	КонецЕсли;	
КонецФункции
&НаСервере
Функция ПолучитьНовогоРодителяЧерезКодПозиции(Позиция)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_ПозицииСмет.Ссылка КАК Ссылка
		|ИЗ
		|Справочник.УНСФ_ПозицииСмет КАК УНСФ_ПозицииСмет
		|ГДЕ
		|	УНСФ_ПозицииСмет.РазделСметы = ИСТИНА
		|	И УНСФ_ПозицииСмет.Владелец = &ТекСмета
		|	И ВЫРАЗИТЬ(УНСФ_ПозицииСмет.Ссылка.Комментарий КАК СТРОКА(150)) = &Комментарий
		|	И УНСФ_ПозицииСмет.ОД_СтарыйКод = &НаименованиеРодителя";
	
	Запрос.УстановитьПараметр("НаименованиеРодителя", Строка(Позиция.Родитель.Код));
	Запрос.УстановитьПараметр("ТекСмета", Объект.Ссылка);
	Запрос.УстановитьПараметр("Комментарий", "Создан копированием из " + Объект.Ссылка + " в " + ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДелатльныеЗаписи = РезультатЗапроса.Выбрать();	
	
	Если ВыборкаДелатльныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДелатльныеЗаписи.Ссылка;	
	Иначе
		Возврат Справочники.УНСФ_ПозицииСмет.ПустаяСсылка();	
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область УдалениеРасценок

&НаКлиенте
Процедура УдалитьРасценки()
	
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	
	Если ТекСтрока = Неопределено ИЛИ ТекСтрока.ИндексКартинки <> 3 Тогда
		Возврат;
	КонецЕсли;
		
	СтрукПередачи = Новый Структура;
	СтрукПередачи.Вставить("Наименование", ТекСтрока.Наименование);
	СтрукПередачи.Вставить("ЕдиницаИзмерения", ТекСтрока.ЕдиницаИзмерения); 
	
	УдалитьРасценкиНаСервере(СтрукПередачи); 
	
	Сообщить("Расценки удалены!");
	
КонецПроцедуры
&НаСервере
Процедура УдалитьРасценкиНаСервере(СтруктураДанных)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УНСФ_СметныеРасценки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.УНСФ_СметныеРасценки КАК УНСФ_СметныеРасценки
		|ГДЕ
		|	УНСФ_СметныеРасценки.Наименование = &Наименование
		|	И УНСФ_СметныеРасценки.ЕдиницаИзмерения = &ЕдиницаИзмерения";

	Запрос.УстановитьПараметр("Наименование", СтруктураДанных.Наименование);
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", СтруктураДанных.ЕдиницаИзмерения);
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Об = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Об.Удалить();
		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти    

#Область ЗаполнитьПоВидуЦен

&НаКлиенте
Процедура ЗаполнитьМатериалыПоВидуЦен()

	Если Не ПроверитьНаЗаписанностьСметы() Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.ВидыЦен.Форма.ФормаВыбора",
		,
		ЭтотОбъект,
		,
		,
		,
		Новый ОписаниеОповещения("ЗаполнитьМатериалыПоВидуЦенПродолжение", ЭтотОбъект),
		РежимОткрытияОкнаФОрмы.БлокироватьОкноВладельца);
	
	КонецПроцедуры 
&НаКлиенте
Процедура ЗаполнитьМатериалыПоВидуЦенПродолжение(ВыбранноеЗначение, ДопПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьМатериалыПоВидуЦенНаСервере(ВыбранноеЗначение);
	Записать();  
	
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьМатериалыПоВидуЦенНаСервере(ВидЦен)
	
	НачатьТранзакцию();
	
	Попытка
		Блокировка = Новый БлокировкаДанных();
		ЭлементБлокировки = Блокировка.Добавить("Справочник.УНСФ_ПозицииСмет");
		ЭлементБлокировки.УстановитьЗначение("Владелец", Объект.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ВидЦен", ВидЦен);
		Запрос.УстановитьПараметр("Смета", Объект.Ссылка);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика,
		|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
		|ПОМЕСТИТЬ ЦеныНоменклатуры
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УНСФ_СтоимостьРесурсовСрезПоследних.Ресурс КАК Ресурс,
		|	МАКСИМУМ(УНСФ_СтоимостьРесурсовСрезПоследних.Стоимость) КАК Стоимость
		|ПОМЕСТИТЬ ЦеныРесурсов
		|ИЗ
		|	РегистрСведений.УНСФ_СтоимостьРесурсов.СрезПоследних(, ВидЦены = &ВидЦен) КАК УНСФ_СтоимостьРесурсовСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	УНСФ_СтоимостьРесурсовСрезПоследних.Ресурс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УНСФ_ПозицииСметРесурсы.Ссылка КАК ПозицияСметы,
		|	УНСФ_ПозицииСметРесурсы.НомерСтроки КАК НомерСтроки,
		|	УНСФ_ПозицииСметРесурсы.Количество КАК Количество,
		|	УНСФ_ПозицииСметРесурсы.КоличествоВсего КАК КоличествоВсего,
		|	ЦеныРесурсов.Стоимость КАК Цена,
		|	ЦеныРесурсов.Стоимость * УНСФ_ПозицииСметРесурсы.КоличествоВсего КАК Сумма,
		|	""Ресурсы"" КАК Детали
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет.Ресурсы КАК УНСФ_ПозицииСметРесурсы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦеныРесурсов КАК ЦеныРесурсов
		|		ПО УНСФ_ПозицииСметРесурсы.Ресурс = ЦеныРесурсов.Ресурс
		|ГДЕ
		|	УНСФ_ПозицииСметРесурсы.Ссылка.Владелец = &Смета
		|	И НЕ УНСФ_ПозицииСметРесурсы.Ссылка.ПометкаУдаления
		|	И НЕ УНСФ_ПозицииСметРесурсы.Ссылка.РазделСметы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УНСФ_ПозицииСметМатериалы.Ссылка,
		|	УНСФ_ПозицииСметМатериалы.НомерСтроки,
		|	УНСФ_ПозицииСметМатериалы.Количество,
		|	УНСФ_ПозицииСметМатериалы.КоличествоВсего,
		|	ЦеныНоменклатуры.Цена,
		|	ЦеныНоменклатуры.Цена * УНСФ_ПозицииСметМатериалы.КоличествоВсего,
		|	""Материалы""
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет.Материалы КАК УНСФ_ПозицииСметМатериалы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО УНСФ_ПозицииСметМатериалы.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И УНСФ_ПозицииСметМатериалы.Характеристика = ЦеныНоменклатуры.Характеристика
		|ГДЕ
		|	УНСФ_ПозицииСметМатериалы.Ссылка.Владелец = &Смета
		|	И НЕ УНСФ_ПозицииСметМатериалы.Ссылка.ПометкаУдаления
		|	И НЕ УНСФ_ПозицииСметМатериалы.Ссылка.РазделСметы
		|ИТОГИ ПО
		|	ПозицияСметы";
		
		Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПозицияСметы"); 
		
		Пока Выборка.Следующий() Цикл
			Позиция = Выборка.ПозицияСметы.ПолучитьОбъект();
			
			ВыборкаЦены = Выборка.Выбрать();
			Пока ВыборкаЦены.Следующий() Цикл	
				Если ВыборкаЦены.Детали = "Материалы" Тогда
					Строка = Позиция[ВыборкаЦены.Детали].Получить(ВыборкаЦены.НомерСтроки - 1);
					ЗаполнитьЗначенияСвойств(Строка, ВыборкаЦены);	
				КонецЕсли;
			КонецЦикла;
			
			Позиция.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Смета. ЗаполнитьПоВидуЦен'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.УНСФ_Смета,
			,
			ОписаниеОшибки());
		
		ОтменитьТранзакцию();
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'При установке цен возникла ошибка. Описание см. в журнале регистрации.'"));
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРесурсыПоВидуЦен()

	Если Не ПроверитьНаЗаписанностьСметы() Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
		"Справочник.ВидыЦен.Форма.ФормаВыбора",
		,
		ЭтотОбъект,
		,
		,
		,
		Новый ОписаниеОповещения("ЗаполнитьРесурсыПоВидуЦенПродолжение", ЭтотОбъект),
		РежимОткрытияОкнаФОрмы.БлокироватьОкноВладельца);
	
	КонецПроцедуры 
&НаКлиенте
Процедура ЗаполнитьРесурсыПоВидуЦенПродолжение(ВыбранноеЗначение, ДопПараметры) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРесурсыПоВидуЦенНаСервере(ВыбранноеЗначение);
	Записать();  
	
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьРесурсыПоВидуЦенНаСервере(ВидЦен)
	
	НачатьТранзакцию();
	
	Попытка
		Блокировка = Новый БлокировкаДанных();
		ЭлементБлокировки = Блокировка.Добавить("Справочник.УНСФ_ПозицииСмет");
		ЭлементБлокировки.УстановитьЗначение("Владелец", Объект.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ВидЦен", ВидЦен);
		Запрос.УстановитьПараметр("Смета", Объект.Ссылка);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика,
		|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
		|ПОМЕСТИТЬ ЦеныНоменклатуры
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УНСФ_СтоимостьРесурсовСрезПоследних.Ресурс КАК Ресурс,
		|	МАКСИМУМ(УНСФ_СтоимостьРесурсовСрезПоследних.Стоимость) КАК Стоимость
		|ПОМЕСТИТЬ ЦеныРесурсов
		|ИЗ
		|	РегистрСведений.УНСФ_СтоимостьРесурсов.СрезПоследних(, ВидЦены = &ВидЦен) КАК УНСФ_СтоимостьРесурсовСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	УНСФ_СтоимостьРесурсовСрезПоследних.Ресурс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УНСФ_ПозицииСметРесурсы.Ссылка КАК ПозицияСметы,
		|	УНСФ_ПозицииСметРесурсы.НомерСтроки КАК НомерСтроки,
		|	УНСФ_ПозицииСметРесурсы.Количество КАК Количество,
		|	УНСФ_ПозицииСметРесурсы.КоличествоВсего КАК КоличествоВсего,
		|	ЦеныРесурсов.Стоимость КАК Цена,
		|	ЦеныРесурсов.Стоимость * УНСФ_ПозицииСметРесурсы.КоличествоВсего КАК Сумма,
		|	""Ресурсы"" КАК Детали
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет.Ресурсы КАК УНСФ_ПозицииСметРесурсы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦеныРесурсов КАК ЦеныРесурсов
		|		ПО УНСФ_ПозицииСметРесурсы.Ресурс = ЦеныРесурсов.Ресурс
		|ГДЕ
		|	УНСФ_ПозицииСметРесурсы.Ссылка.Владелец = &Смета
		|	И НЕ УНСФ_ПозицииСметРесурсы.Ссылка.ПометкаУдаления
		|	И НЕ УНСФ_ПозицииСметРесурсы.Ссылка.РазделСметы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УНСФ_ПозицииСметМатериалы.Ссылка,
		|	УНСФ_ПозицииСметМатериалы.НомерСтроки,
		|	УНСФ_ПозицииСметМатериалы.Количество,
		|	УНСФ_ПозицииСметМатериалы.КоличествоВсего,
		|	ЦеныНоменклатуры.Цена,
		|	ЦеныНоменклатуры.Цена * УНСФ_ПозицииСметМатериалы.КоличествоВсего,
		|	""Материалы""
		|ИЗ
		|	Справочник.УНСФ_ПозицииСмет.Материалы КАК УНСФ_ПозицииСметМатериалы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|		ПО УНСФ_ПозицииСметМатериалы.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И УНСФ_ПозицииСметМатериалы.Характеристика = ЦеныНоменклатуры.Характеристика
		|ГДЕ
		|	УНСФ_ПозицииСметМатериалы.Ссылка.Владелец = &Смета
		|	И НЕ УНСФ_ПозицииСметМатериалы.Ссылка.ПометкаУдаления
		|	И НЕ УНСФ_ПозицииСметМатериалы.Ссылка.РазделСметы
		|ИТОГИ ПО
		|	ПозицияСметы";
		
		Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ПозицияСметы"); 
		
		Пока Выборка.Следующий() Цикл
			Позиция = Выборка.ПозицияСметы.ПолучитьОбъект();
			
			ВыборкаЦены = Выборка.Выбрать();
			Пока ВыборкаЦены.Следующий() Цикл	
				Если ВыборкаЦены.Детали = "Ресурсы" Тогда
					Строка = Позиция[ВыборкаЦены.Детали].Получить(ВыборкаЦены.НомерСтроки - 1);
					ЗаполнитьЗначенияСвойств(Строка, ВыборкаЦены);	
				КонецЕсли;
			КонецЦикла;
			
			Позиция.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Смета. ЗаполнитьПоВидуЦен'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.УНСФ_Смета,
			,
			ОписаниеОшибки());
		
		ОтменитьТранзакцию();
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'При установке цен возникла ошибка. Описание см. в журнале регистрации.'"));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти







